<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA IBM Reference//EN"
 "ibm-reference.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<reference id="lxoc_ock_config_file" xml:lang="en-us">
<title>Adjusting the <keyword conref="lxoc_conref.dita#lxoc_conref/ocrypto"/> configuration
file</title>
<!--SH: Acrolinx run on Apr. 11, 2014, remaining flags cannot be avoided-->
<titlealts>
<navtitle><keyword conref="lxoc_conref.dita#lxoc_conref/ocrypto"/> configuration file</navtitle>
<searchtitle><ph conref="lxcommon.dita#phrases/lib_title"/>: Adjusting the <keyword
conref="lxoc_conref.dita#lxoc_conref/ocrypto"/> configuration file</searchtitle>
</titlealts>
<shortdesc>A preconfigured list of all available tokens that are ready to register to the <keyword
conref="lxoc_conref.dita#lxoc_conref/ocrypto"/> slot daemon is required before the slot daemon can
start. This list is provided by the global configuration file called
<filepath>opencryptoki.conf</filepath>. Read this topic for information on how to adapt this file
according to your installation.</shortdesc>
<prolog>
<metadata>
<keywords>
<indexterm><keyword conref="lxoc_conref.dita#lxoc_conref/ocrypto"/><indexterm>base
library</indexterm><indexterm>token library</indexterm><indexterm>configuration
file</indexterm></indexterm>
<indexterm>pkcs11_startup</indexterm>
<indexterm>pk_config_data</indexterm>
<indexterm>pkcsconf -t command</indexterm>
<indexterm>slot manager<indexterm>starting</indexterm></indexterm>
<indexterm>starting the slot manager</indexterm>
<indexterm>opencryptoki.conf<indexterm>configuration file</indexterm></indexterm>
<indexterm>slot manager</indexterm>
<indexterm>slot entry</indexterm>
<indexterm>pkcsconf command</indexterm>
<indexterm>command pkcsconf </indexterm>
<indexterm>configuration file<indexterm>sample for opencryptoki.conf</indexterm></indexterm>
<indexterm>available libraries in <keyword conref="lxoc_conref.dita#lxoc_conref/ocrypto"
/></indexterm>
</keywords>
</metadata>
</prolog>
<refbody>
<section>
<p><xref href="#lxoc_ock_config_file/tab_openclibs" format="dita"/> lists the maximum number of
available libraries that may be in place after you successfully installed <keyword
conref="lxoc_conref.dita#lxoc_conref/ocrypto"/>. It may vary for different distributions and is
dependent from the installed packages. </p>
<p>Also, <ph conref="lxcommon.dita#phrases/ph_loz_and_lone"/> do not support the Trusted Platform
Module (TPM) token library.</p>
<p>A token is only available, if the token library is installed, and the appropriate software and
hardware support pertaining to the stack of the token is also installed. For example, the <keyword
conref="lxoc_conref.dita#lxoc_conref/ep11token"/> is only available if all parts of the <keyword
conref="lxoc_conref.dita#lxoc_conref/ep11lib"/> software are installed and a <keyword
conref="lxoc_conref.dita#lxoc_conref/cexallplong"/> is detected. For more information, read <xref
href="https://www.ibm.com/support/knowledgecenter/linuxonibm/liaaf/lnz_r_ep.html" format="html"
scope="external">Exploiting Enterprise PKCS #11 using openCryptoki</xref>.</p>
<p> A token needs not be available, even if the corresponding token library is installed. Display
the list of available tokens by using the command: <screen>$ pkcsconf -t</screen></p>
<table id="tab_openclibs"><title><keyword conref="lxoc_conref.dita#lxoc_conref/ocrypto"/>
libraries</title><desc>
<p outputclass="summary">The table lists the libraries in the first column and holds an explanation
in the second column.</p>
</desc><tgroup cols="2">
<colspec colname="col1" colwidth="56*"/>
<colspec colname="col2" colwidth="41*"/>
<thead>
<row>
<entry>Library</entry>
<entry>Explanation</entry>
</row>
</thead>
<tbody>
<row>
<entry><filepath>/usr/lib64/opencryptoki/libopencryptoki.so </filepath></entry>
<entry><keyword conref="lxoc_conref.dita#lxoc_conref/ocrypto"/> base library</entry>
</row>
<row>
<entry><filepath>/usr/lib64/opencryptoki/stdll/libpkcs11_ica.so</filepath></entry>
<entry><keyword conref="lxoc_conref.dita#lxoc_conref/libicatoken"/> library</entry>
</row>
<row>
<entry><filepath>/usr/lib64/opencryptoki/stdll/libpkcs11_sw.so</filepath></entry>
<entry><keyword conref="lxoc_conref.dita#lxoc_conref/softtoken"/> library</entry>
</row>
<row>
<entry><filepath>/usr/lib64/opencryptoki/stdll/libpkcs11_tpm.so</filepath></entry>
<entry><keyword conref="lxoc_conref.dita#lxoc_conref/tpmtoken"/> library</entry>
</row>
<row>
<entry><filepath>/usr/lib64/opencryptoki/stdll/libpkcs11_cca.so</filepath></entry>
<entry><keyword conref="lxoc_conref.dita#lxoc_conref/ccatoken"/> library</entry>
</row>
<row>
<entry><filepath>/usr/lib64/opencryptoki/stdll/libpkcs11_ep11.so</filepath></entry>
<entry><keyword conref="lxoc_conref.dita#lxoc_conref/ep11token"/> library</entry>
</row>
<row>
<entry><filepath>/usr/lib64/opencryptoki/stdll/libpkcs11_icsf.so</filepath></entry>
<entry><keyword conref="lxoc_conref.dita#lxoc_conref/icsftok"/> library</entry>
</row>
</tbody>
</tgroup></table>
<?Pub Caret 0?>
<p><filepath>libopencryptoki.so</filepath> is the <keyword
conref="lxoc_conref.dita#lxoc_conref/ocrypto"/> shared base library. The main API for the STDLLs
<filepath>PKCS11_API.so</filepath> (mentioned in <xref href="lxoc_ock_features.dita"/>) is a link,
or an alias. Besides the token library, an application needs to load either the
<filepath>libopencryptoki.so</filepath> object or the <filepath>PKCS11_API.so</filepath> link to be
able to exploit a token.</p>
<screen>lrwxrwxrwx 1 root root     18 May 19 20:05 PKCS11_API.so -> libopencryptoki.so</screen>
<p>The <filepath>/etc/opencryptoki/opencryptoki.conf</filepath> file must exist and it must contain
an entry for each instance of a token to make these instances available. By default, one such entry
is available upon installation (see the <codeph>slot 4</codeph> entry in the provided sample
configuration from <xref href="#lxoc_ock_config_file/lxce_ock_config_sample" format="dita"/>). </p>
<p>You can check the current default <filepath>opencryptoki.conf</filepath> file on this
URL:<codeblock><xref href="https://github.com/opencryptoki/opencryptoki/blob/master/usr/sbin/pkcsslotd/opencryptoki.conf" format="html" scope="external"/></codeblock></p>
<fig id="lxce_ock_config_sample">
<title>Default opencryptoki.conf</title>
<screen>
version opencryptoki-3.16

# The following defaults are defined:
#       hwversion = "0.0"
#       firmwareversion = "0.0"
#       description = Linux
#       manufacturer = IBM
#
# The slot definitions below may be overriden and/or customized.
# For example:
#       slot 0
#       {
#          stdll = libpkcs11_cca.so
#          description = "OCK CCA Token"
#          manufacturer = "MyCompany Inc."
#          hwversion = "2.32"
#          firmwareversion = "1.0"
#       }
# See man(5) opencryptoki.conf for further information.
#
slot 0
{
stdll = libpkcs11_tpm.so
}

slot 1
{
stdll = libpkcs11_ica.so
}

slot 2
{
stdll = libpkcs11_cca.so
}

slot 3
{
stdll = libpkcs11_sw.so
}

slot 4
{
stdll = libpkcs11_ep11.so
confname = ep11tok.conf
}
</screen>
</fig>
<note>
<ul>
<li>The standard path for slot token dynamic link libraries (STDLLs) is:
<filepath>/usr/lib64/opencryptoki/stdll/</filepath>.</li>
<li>The standard path for the token-specific configuration file (in our example,
<filepath>ep11tok.conf</filepath>) is <filepath>/etc/opencryptoki/</filepath>.
<!--You can change this path by using the <codeph>OCK_EP11_TOKEN_DIR</codeph> environment variable. For more information, read <xref href="lxce_ep11_conffile.dita"/>.--></li>
<li>You can specify multiple tokens of any type in different slots. Each token must
be specified with a unique token name in each slot. The tokens are located in different file
paths in the token directory, but use the same STDLL. For example:<screen>
slot 4
{
stdll = libpkcs11_ep11.so
confname = ep11tok01.conf
tokname = ep11token01
description = "Ep11 Token"
manufacturer = "IBM"
hwversion = "4.11"
firmwareversion = "2.0"
}

slot 5
{
stdll = libpkcs11_ep11.so
confname = ep11tok02.conf
tokname = ep11token02
}</screen></li>
</ul>
</note>
</section>
</refbody>
</reference>
<?Pub *0000003408?>
