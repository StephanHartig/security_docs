<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA IBM Reference//EN"
 "ibm-reference.dtd">
<?Pub Sty _display FontColor="red"?>
<reference id="l0wskc02_aes_pinpcp" rev="shr2" xml:lang="en-us">
<title>AES PINPROT, PINCALC, and PINPRW variable-length symmetric
key token</title>
<titlealts>
<navtitle>AES PINPROT, PINCALC, and PINPRW </navtitle><?Pub Caret 4?>
<searchtitle><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca_long"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca"/>): AES PINPROT, PINCALC, and PINPRW
variable-length symmetric key token</searchtitle>
</titlealts>
<shortdesc>View a table showing the format of the PINPROT, PINCALC,
and PINPRW variable-length symmetric key-tokens. </shortdesc>
<prolog><metadata>
<keywords><indexterm>key token<indexterm>PINPROT variable-length symmetric</indexterm><indexterm>PINCALC
 variable-length symmetric</indexterm><indexterm>PINPRW variable-length
symmetric</indexterm></indexterm><indexterm>AES PINPROT, PINCALC,
and PINPRW variable-length symmetric</indexterm></keywords>
</metadata></prolog>
<refbody>
<table id="aes_pinpcp_vlskt" pgwide="1"><title>AES PINPROT, PINCALC, and PINPRW variable-length
symmetric key token, version <ph>X'05'</ph></title><desc>
<p outputclass="summary">AES PINPROT, PINCALC, and PINPRW variable-length symmetric key token,
version <ph>X'05'</ph></p>
</desc><tgroup cols="5" colsep="1" rowsep="1">
<colspec colname="col1" colwidth="27*"/>
<colspec colname="col2" colwidth="27*"/>
<colspec colname="col3" colwidth="38*"/>
<colspec colname="col4" colwidth="70*"/>
<colspec colname="col5" colwidth="135*"/>
<thead>
<row>
<entry colname="col1">Offset (bytes)</entry>
<entry colname="col2">Length (bytes)</entry>
<entry nameend="col5" namest="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry nameend="col5" namest="col1">
<p>Header</p>
</entry>
</row>
<row>
<entry>000</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Token identifier:</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'01'</dt>
<dd>Internal key-token (encrypted key is wrapped with the master key or there is no payload).</dd>
</dlentry>
<dlentry>
<dt>X'02'</dt>
<dd>External key-token (encrypted payload is wrapped with a transport key or there is no payload). A
transport key can be a key-encrypting key or an RSA public-key.</dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined.</p>
</entry>
</row>
<row>
<entry>001</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Reserved, binary zero.</p>
</entry>
</row>
<row>
<entry>002</entry>
<entry>02</entry>
<entry nameend="col5" namest="col3">
<p>Length in bytes of the overall token structure:</p>
<p>46 + (2 * <i>kuf</i>) + (2 * <i>kmf</i>) + <i>kl</i> + <i>iead</i> + <i>uad</i> + ((<i>pl</i> +
7) / 8)</p>
<dl compact="yes">
<dlhead>
<dthd>Key token</dthd>
<ddhd>Minimum token length</ddhd>
</dlhead>
<dlentry>
<dt>Skeleton</dt>
<dd>46 + (2 * 3) + (2 * 3) + 0 + 0 + 0 + 0 = 58</dd>
</dlentry>
<dlentry>
<dt>Encrypted V1 payload</dt>
<dd>46 + (2 * 3) + (2 * 3) + 0 + 0 + 0 + ((640 + 7) / 8) = 138</dd>
</dlentry>
</dl>
<dl compact="yes">
<dlhead>
<dthd>Key token</dthd>
<ddhd>Maximum token length</ddhd>
</dlhead>
<dlentry>
<dt>External*</dt>
<dd>46 + (2 * 3) + (2 * 3) + 64 + 0 + 255 + ((4096 + 7) / 8) = 889</dd>
</dlentry>
<dlentry>
<dt>Internal</dt>
<dd>46 + (2 * 3) + (2 * 3) + 64 + 0 + 255 + ((640 + 7) / 8) = 457</dd>
</dlentry>
</dl>
<p>*This assumes a PKOAEP2 key-wrapping method using a 4096-bit RSA transport key.</p>
</entry>
</row>
<row>
<entry>004</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Token version number (identifies the format of this key token):</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'05'</dt>
<dd>Version 5 format of the key token (variable-length symmetric key-token)</dd>
</dlentry>
</dl>
</entry>
</row>
<row>
<entry>005</entry>
<entry>03</entry>
<entry nameend="col5" namest="col3">
<p>Reserved, binary zero.</p>
</entry>
</row>
<row>
<entry nameend="col5" namest="col1">
<p>End of header</p>
</entry>
</row>
<row>
<entry nameend="col5" namest="col1">
<p>Wrapping information section (all data related to wrapping the key)</p>
</entry>
</row>
<row>
<entry>008</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key material state:</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>No key is present. This is called a skeleton key-token. The key token is external or
internal.</dd>
</dlentry>
<dlentry>
<dt>X'02'</dt>
<dd>Key is wrapped with a transport key. When the encrypted section key-wrapping method is AESKW
(value at offset 26 is X'02'), the transport key is an AES key-encrypting key. When it is PKOAEP2
(value at offset 26 is X'03'), the transport key is an RSA public-key. The key token is
external.</dd>
</dlentry>
<dlentry>
<dt>X'03'</dt>
<dd>Key is wrapped with the AES master-key. The encrypted section key-wrapping method is AESKW. The
key token is internal.</dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined.</p>
</entry>
</row>
<row>
<entry>009</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key verification pattern (KVP) type:</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>No KVP (no key present or key is wrapped with an RSA public-key). The key token is external or
internal.</dd>
</dlentry>
<dlentry>
<dt>X'01'</dt>
<dd>AESMK (8 leftmost bytes of SHA-256 hash: X'01 &parallel; clear AES MK). The key token is
internal.</dd>
</dlentry>
<dlentry>
<dt>X'02'</dt>
<dd>KEK (8 leftmost bytes of SHA-256 hash: X'01 &parallel; clear KEK). The key token is
external.</dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined.</p>
</entry>
</row>
<row>
<entry>010</entry>
<entry>16</entry>
<entry nameend="col5" namest="col3">
<p>KVP (value depends on value of key material state, that is, the value at offset 8):</p>
<dl compact="yes">
<dlhead>
<dthd><keyword>Value at offset 8</keyword></dthd>
<ddhd><keyword>Value of KVP</keyword></ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>The key-material state is no key present. The field should be filled with binary zeros. The key
token is external or internal.</dd>
</dlentry>
<dlentry>
<dt>X'02'</dt>
<dd>The key material state is the key is wrapped with a transport key. The value of the KVP depends
on the value of the encrypted section key-wrapping method:<ul>
<li>When the key-wrapping method is AESKW (value at offset 26 is X'02'), the field contains the KVP
of the key-encrypting key used to wrap the key. The 8-byte KEK KVP is left-aligned in the field and
padded on the right low-order bytes with binary zeros.</li>
<li>When the key-wrapping method is PKOAEP2 (value at offset 26 is X'03'), the value should be
filled with binary zeros. The encoded message, which contains the key, is wrapped with an RSA
public-key.</li>
</ul><p>The key token is external.</p></dd>
</dlentry>
<dlentry>
<dt>X'03'</dt>
<dd>The key-material state is the key is wrapped with the AES master-key. The field contains the
MKVP of the AES master-key used to wrap the key. The 8-byte MKVP is left-aligned in the field and
padded on the right low-order bytes with binary zeros. The key token is internal.</dd>
</dlentry>
</dl>
</entry>
</row>
<row>
<entry>026</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Encrypted section key-wrapping method (how data in the encrypted section is protected):</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>No key-wrapping method (no key present). The key token is external or internal.</dd>
</dlentry>
<dlentry>
<dt>X'02'</dt>
<dd>AESKW (ANS X9.102). The key token is external with a key wrapped by an AES key-encrypting key,
or the key token is internal with a key wrapped by the AES master-key.</dd>
</dlentry>
<dlentry>
<dt>X'03'</dt>
<dd>PKOAEP2. Message <i>M</i>, which contains the key, is encoded using the RSAES-OAEP scheme of the
RSA PKCS #1 v2.1 standard. The encoded message (<i>EM</i>) is produced using the given hash
algorithm by encoding message <i>M</i> using the Bellare and Rogaway Optimal Asymmetric Encryption
Padding (OAEP) method for encoding messages. For PKAOEP2, <i>M</i> is defined as follows:<p><i>M</i>
= [32 bytes: <i>hAD</i>] &parallel; [2 bytes: bit length of the clear key] &parallel; [clear
key]</p>
<p>where <i>hAD</i> is the message digest of the associated data, and is calculated using the
SHA-256 algorithm on the data starting at offset 30 for the length in bytes of all the associated
data for the key token (length value at offset 32).</p>
<p><i>EM</i> is wrapped with an RSA public-key. The key token is external.</p></dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined.</p>
</entry>
</row>
<row>
<entry>027</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Hash algorithm used for wrapping key or encoding message. Meaning depends on whether the
encrypted section key-wrapping method (value at offset 26) is no key-wrapping method, AESKW, or
PKOAEP2:</p>
<p><keyword>No key-wrapping method (value at offset 26 is X'00')</keyword></p>
<p>Hash algorithm used for wrapping key when encrypted section key-wrapping method is no
key-wrapping method:</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>No hash (no key present)</dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined. The key token is external or internal.</p>
<p><keyword>AESKW key-wrapping method (value at offset 26 is X'02')</keyword></p>
<p>Hash algorithm used for wrapping key when encrypted section key-wrapping method is AESKW. The
value indicates the algorithm used to calculate the message digest of the associated data. The
message digest is included in the wrapped payload and is calculated starting at offset 30 for the
length in bytes of all the associated data for the key token (length value at offset 32).</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'02'</dt>
<dd>SHA-256</dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined. The key token is external or internal.</p>
<p><keyword>PKOAEP2 key-wrapping method (value at offset 26 is X'03')</keyword></p>
<p>Hash algorithm used for encoding message when encrypted section key-wrapping method is PKOAEP2.
The value indicates the given hash algorithm used for encoding message <i>M</i> using the RSAES-OAEP
scheme of the RSA PKCS #1 v2.1 standard.</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'01'</dt>
<dd>SHA-1</dd>
</dlentry>
<dlentry>
<dt>X'02'</dt>
<dd>SHA-256</dd>
</dlentry>
<dlentry>
<dt>X'04'</dt>
<dd>SHA-384</dd>
</dlentry>
<dlentry>
<dt>X'08'</dt>
<dd>SHA-512</dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined. The key token is external.</p>
</entry>
</row>
<row>
<entry>028</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Payload format version (identifies format of the payload):</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'01'</dt>
<dd>V1 payload (V0PYLD). The payload format depends on the encrypted section key-wrapping method
(value at offset 26):<dl compact="yes">
<dlhead>
<dthd>Value at offset 26</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>There is no key-wrapping method. When no key is present, there is no payload. The key token is
external or internal.</dd>
</dlentry>
<dlentry>
<dt>X'02'</dt>
<dd>The key-wrapping method is AESKW and the payload is fixed length based on the maximum possible
key size of the algorithm for the key. The key is padded with random data to the size of the largest
key for that algorithm. This helps to deter attacks on keys known to be weaker. The key length
cannot be inferred by the size of the payload. The key token is external or internal.</dd>
</dlentry>
<dlentry>
<dt>X'03'</dt>
<dd>The key-wrapping method is PKOAEP2 and the payload length is equal to the modulus size in bits
of the RSA transport key used to wrap the encoded message. The key token is external. When the
external key is exported, the internal target key will have the same V1 payload format.</dd>
</dlentry>
</dl></dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined.</p>
</entry>
</row>
<row>
<entry>029</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Reserved, binary zero.</p>
</entry>
</row>
<row>
<entry nameend="col5" namest="col1">
<p>End of wrapping information section</p>
</entry>
</row>
<row>
<entry nameend="col5" namest="col1">
<p>AESKW or PKOAEP2 components: (1) associated data section and (2) optional wrapped AESKW formatted
payload or wrapped PKOAEP2 encoded payload (no payload if no key present)</p>
</entry>
</row>
<row>
<entry nameend="col5" namest="col1">
<p>Associated data section</p>
</entry>
</row>
<row>
<entry>030</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Associated data section version:</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'01'</dt>
<dd>Version 1 format of associated data</dd>
</dlentry>
</dl>
</entry>
</row>
<row>
<entry>031</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Reserved, binary zero.</p>
</entry>
</row>
<row>
<entry>032</entry>
<entry>02</entry>
<entry nameend="col5" namest="col3">
<p>Length in bytes of all the associated data for the key token: 16 - 347.</p>
</entry>
</row>
<row>
<entry>034</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Length in bytes of the optional key label (<i>kl</i>): 0 or 64.</p>
</entry>
</row>
<row>
<entry>035</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Length in bytes of the optional IBM extended associated data (<i>iead</i>): 0.</p>
</entry>
</row>
<row>
<entry>036</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Length in bytes of the optional user-definable associated data (<i>uad</i>): 0 - 255.</p>
</entry>
</row>
<row>
<entry>037</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Reserved, binary zero.</p>
</entry>
</row>
<row>
<entry>038</entry>
<entry>02</entry>
<entry nameend="col5" namest="col3">
<p>Length in <i>bits</i> of the wrapped payload (<i>pl</i>): 0, 512 - 4096.</p>
<ul>
<li>For no key-wrapping method (no key present), <i>pl</i> is 0.</li>
<li>For PKOAEP2 encoded payloads, <i>pl</i> is the length in bits of the modulus size of the RSA key
used to wrap the payload. This can be 512 - 4096.</li>
<li>For an AESKW formatted payload, <i>pl</i> is based on the key size of the algorithm type and the
payload format version:<p><keyword>AES algorithm (value at offset 41 is X'02')</keyword></p><ul>
<li>An AES key can have a length of 16, 24, or 32 bytes (128, 192, or 256 bits). The following table
shows the payload length for a given AES key size and payload format:</li>
</ul><codeblock>                        <b>Bit length of            Bit length of
                        V0 payload (value at     V1 payload (value at
AES key size            offset 28 is X'00')      offset 28 is X'01')</b>
16 bytes (128 bits)     Not applicable           640
24 bytes (192 bits)     Not applicable           640
32 bytes (256 bits)     Not applicable           640</codeblock></li>
</ul>
</entry>
</row>
<row>
<entry>040</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Reserved, binary zero.</p>
</entry>
</row>
<row>
<entry>041</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Algorithm type (algorithm for which the key can be used):</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'02'</dt>
<dd>AES</dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined.</p>
</entry>
</row>
<row>
<entry>042</entry>
<entry>02</entry>
<entry nameend="col5" namest="col3">
<p>Key type (general class of the key):</p>
<p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'0005'</dt>
<dd>PINPROT</dd>
</dlentry>
<dlentry>
<dt>X'0006'</dt>
<dd>PINCALC</dd>
</dlentry>
<dlentry>
<dt>X'0007'</dt>
<dd>PINPRW</dd>
</dlentry>
</dl>
</p>
<p>All unused values are reserved and undefined.</p>
</entry>
</row>
<row>
<entry>044</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p rev="sh21i1">Key usage fields count (<i>kuf</i>): 3. For PINPROT: 3, if value at offset 50 = X’01’ (DK enabled), 
or 4, if value at offset 50 = X’00’ (no field format
specification).</p> <p>Key-usage field information defines restrictions on the
use of the key. </p>
<p>For key type PINPROT, see AES PINPROT <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmktb2"/> keywords (<xref
href="wskc_r_ktb2keywords.dita#ktb2keywords/ktb2_pinprot_fig"/>).</p>
<p>For key type PINCALC, see AES PINCALC <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmktb2"/> keywords (<xref
href="wskc_r_ktb2keywords.dita#ktb2keywords/ktb2_pincalc_fig"/>).</p>
<p>For key type PINPRW, see AES PINPRW <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmktb2"/> keywords (<xref
href="wskc_r_ktb2keywords.dita#ktb2keywords/ktb2_pinprw_fig"/>).</p>
<p>Each key-usage field is 2 bytes in length. The value in this field indicates how many 2-byte key
usage fields follow.</p>
</entry>
</row>
<row>
<entry>045</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key-usage field 1, high-order byte. The meaning is determined by the key type (value at offset
42). The key type can be PINPROT, PINCALC, or PINPRW:</p>
<p><synph id="aes_pinprot_kuf1_hob"><kwd>PINPROT (value at offset 42 is X'0005')</kwd></synph></p>
<p>Encryption operation:</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'11xx xxxx'</dt>
<dd>Undefined or not used.</dd>
</dlentry>
<dlentry>
<dt>B'10xx xxxx'</dt>
<dd>Key can be used for encryption; key cannot be used for decryption (ENCRYPT).</dd>
</dlentry>
<dlentry>
<dt>B'01xx xxxx'</dt>
<dd>Key cannot be used for encryption; key can be used for decryption (DECRYPT).</dd>
</dlentry>
<dlentry>
<dt>B'00xx xxxx'</dt>
<dd>Undefined or not used.</dd>
</dlentry>
</dl>
<p>All unused bits are reserved and must be zero.</p>
<p><synph id="aes_pincalc_kuf1_hob"><kwd>PINCALC (value at offset 42 is X'0006')</kwd></synph></p>
<p>MAC operation:</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'1xxx xxxx'</dt>
<dd>Key can only be used for generate (GENONLY).</dd>
</dlentry>
<dlentry>
<dt>B'0xxx xxxx'</dt>
<dd>Undefined or not used.</dd>
</dlentry>
</dl>
<p/>
<p>All unused bits are reserved and must be zero.</p>
<p><synph id="aes_pinprw_kuf1_hob"><kwd>PINPRW (value at offset 42 is X'0007')</kwd></synph></p>
<p>MAC operation:</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'11xx xxxx'</dt>
<dd>Undefined or not used.</dd>
</dlentry>
<dlentry>
<dt>B'10xx xxxx'</dt>
<dd>Key can be used for generate; key cannot be used for verify (GENONLY).</dd>
</dlentry>
<dlentry>
<dt>B'01xx xxxx'</dt>
<dd>Key cannot be used for generate; key can be used for verify (VERIFY).</dd>
</dlentry>
<dlentry>
<dt>B'00xx xxxx'</dt>
<dd>Undefined or not used.</dd>
</dlentry>
</dl>
<p>All unused bits are reserved and must be zero.</p>
</entry>
</row>
<row>
<entry>046</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key-usage field 1, low-order byte (user-defined extension control).</p>
</entry>
</row>
<row>
<entry>047</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key-usage field 2, high-order byte. The meaning is determined by the key type (value at offset
42). The key type can be PINPROT, PINCALC, or PINPRW:</p>
<p><synph id="aes_pinprot_kuf2_hob"><kwd>PINPROT (value at offset 42 is X'0005')</kwd></synph></p>
<p>Encryption mode:</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>Key can be used for Cipher Block Chaining (CBC).</dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined.</p>
<p><synph id="aes_pincalc_kuf2_hob"><kwd>PINCALC (value at offset 42 is X'0006')</kwd></synph></p>
<p>Encryption mode:</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>Key can be used for Cipher Block Chaining (CBC).</dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined.</p>
<p><synph id="aes_pinprw_kuf2_hob"><kwd>PINPRW (value at offset 42 is X'0007')</kwd></synph></p>
<p>MAC mode:</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'01'</dt>
<dd>CMAC mode (NIST SP 800-38B)</dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined.</p>
</entry>
</row>
<row rev="sh21i1">
<entry>048</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key-usage field 2, low-order byte. The meaning is determined by the key type (value at
offset 42). The key type can be PINPROT, PINCALC, or PINPRW:
</p>
<!-- *************** PINPROT   47 2 KUF 2 - low order byte  ************************** -->
<p>PINPROT (value at offset 42 is X'0005'):</p>
<p><b>Inbound key (value at offset 45 is B'01xx xxxx')</b></p>
<ul compact="yes">
<li><b>B’xxx1 xxxx’</b> Key can be used to verify an encrypted PIN (EPINVER).</li>
<li><b>B’xxx0 xxxx’</b> Key cannot be used to verify an encrypted PIN.</li>
<li><b>B’xxxx 1xxx’</b> Key can be used to generate an alternate clear PIN (CPINGENA).</li>
<li><b>B’xxxx 0xxx’</b> Key cannot be used to generate an alternate clear PIN.</li>
<li><b>B’xxxx x1xx’</b> Key can be used to translate an encrypted PIN (PINXLATE).</li>
<li><b>B’xxxx x0xx’</b> Key cannot be used to translate an encrypted PIN.</li>
<li><b>B’xxxx xx1x’</b> Key can be used to reformat an encrypted PIN (REFORMAT).</li>
<li><b>B’xxxx xx0x’</b> Key cannot be used to reformat an encrypted PIN.</li>
<li><b>B’xxxx xxx1’</b> Key can be used to restrictively reformat an ISO-4 encrypted PIN to an ISO-1 encrypted PIN (RFMT4TO1).</li>
<li><b>B’xxxx xxx0’</b> Key cannot be used to reformat an ISO-4 encrypted PIN to an ISO-1 encrypted PIN.</li>
</ul>
<p>All unused bits are reserved and must be zero.</p>
<p><b>Outbound key (value at offset 45 is B'10xx xxxx')</b></p>
<ul compact="yes">
<li><b>B’xx1x xxxx’</b> Key can be used to encrypt a clear PIN (CPINENC).</li>
<li><b>B’xx0x xxxx’</b> Key cannot be used to encrypt a clear PIN.</li>
<li><b>B’xxx1 xxxx’</b> Key can be used to generate an encrypted PIN (EPINGEN).</li>
<li><b>B’xxx0 xxxx’</b> Key cannot be used to generate an encrypted PIN.</li>
<li><b>B’xxxx x1xx’</b> Key can be used to translate an encrypted PIN (PINXLATE).</li>
<li><b>B’xxxx x0xx’</b> Key cannot be used to translate an encrypted PIN.</li>
<li><b>B’xxxx xx1x’</b> Key can be used to reformat an encrypted PIN (REFORMAT).</li>
<li><b>B’xxxx xx0x’</b> Key cannot be used to reformat an encrypted PIN.</li>
<li><b>B’xxxx xxx1’</b> Key can be used to restrictively reformat an ISO-1 encrypted PIN to an ISO-4 encrypted PIN (RFMT1TO4).</li>
<li><b>B’xxxx xxx0’</b> Key cannot be used to restrictively reformat an ISO-1 encrypted PIN to an ISO-4 encrypted PIN.</li>
</ul>
<p>All unused bits are reserved and must be zero.</p>
<!-- *************** PINCALC   47 2 KUF 2 - low order byte ************************** -->
<p>PINCALC (value at offset 42 is X'0006')</p>
<p>All bits are reserved and must be zero.</p>
<!-- *************** PINPRW  47 2 KUF 2 - low order byte  ************************** -->
<p>PINPRW (value at offset 42 is X'0007')</p>
<p>All bits are reserved and must be zero.</p>
</entry>
</row>
<row>
<entry>049</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p><synph id="aes_pinprw_kuf3_hob"><kwd>Key-usage field 3, high-order byte</kwd></synph><synph
id="aes_pincalc_kuf3_hob"><kwd/></synph><synph id="aes_pinprot_kuf3_hob"><kwd/></synph>. The meaning
is determined by the field format identifier (value at offset 50). Currently the only field format
identifier is DK enabled:</p>
<p><keyword>DK enabled (value at offset 50 is X'01')</keyword></p>
<p>Common control by key type, based on key type PINPROT, PINCALC, or
PINPRW:<codeblock>
                  <b>Key type (value at offset 42)
Value  Meaning    PINPROT     PINCALC     PINPRW</b>
<b>X'01'</b>  PIN OP     Valid       Valid       Valid
       (DKPINOP)
<b>X'02'</b>  PIN OPP    Valid       Undefined   Undefined
       (DKPINOPP)
<b>X'03'</b>  PIN AD1    Valid       Undefined   Undefined
       (DKPINAD1)
</codeblock></p>
<p>All unused values are reserved and undefined.</p>
</entry>
</row>
<row>
<entry>050</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key-usage field 3, low-order byte (field format identifier). Identifies the format of key-usage
field 3, high-order byte (value at offset 49):</p>
<dl compact="yes">
<dlhead>
<dthd>Value</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'01'</dt>
<dd>DK enabled (set when <b>DKPINOP</b>, <b>DKPINOPP</b>, or <b>DKPINAD1</b> keyword is used)</dd>
</dlentry>
</dl>
<p>All unused values are reserved and undefined.</p>
</entry>
</row>
<row>
<entry>051</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key management fields count (<i>kmf</i>): 3. Key-management field information describes how the
data is to be managed or helps with management of the key material.</p>
<p>For key type PINPROT, see AES PINPROT <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmktb2"/> keywords (<xref
href="wskc_r_ktb2keywords.dita#ktb2keywords/ktb2_pinprot_fig"/>).</p>
<p>For key type PINCALC, see AES PINCALC <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmktb2"/> keywords (<xref
href="wskc_r_ktb2keywords.dita#ktb2keywords/ktb2_pincalc_fig"/>).</p>
<p>For key type PINPRW, see AES PINPRW <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmktb2"/> keywords (<xref
href="wskc_r_ktb2keywords.dita#ktb2keywords/ktb2_pinprw_fig"/>).</p>
<p>Each key-management field is 2 bytes in length. The value in this field indicates how many 2-byte
key management fields follow.</p>
</entry>
</row>
<row>
<entry>052</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key-management field 1, high-order byte (symmetric-key export control).</p>
</entry>
</row>
<row>
<entry>053</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key-management field 1, low-order byte (export control by algorithm).</p>
</entry>
</row>
<row>
<entry>054</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key-management field 2, high-order byte (key completeness).</p>
</entry>
</row>
<row>
<entry>055</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key-management field 2, low-order byte (security history).</p>
</entry>
</row>
<row>
<entry>056</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key-management field 3, high-order byte (pedigree original).</p>
</entry>
</row>
<row>
<entry>057</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">
<p>Key-management field 3, low-order byte (pedigree current).</p>
</entry>
</row>
<row>
<entry>058</entry>
<entry><i>kl</i></entry>
<entry nameend="col5" namest="col3">
<p>Optional key label.</p>
</entry>
</row>
<row>
<entry>058 + <i>kl</i></entry>
<entry><i>iead</i></entry>
<entry nameend="col5" namest="col3">
<p>Optional IBM extended associated data (unused).</p>
</entry>
</row>
<row>
<entry>058 + <i>kl + iead</i></entry>
<entry><i>uad</i></entry>
<entry nameend="col5" namest="col3">
<p>Optional user-defined associated data.</p>
</entry>
</row>
<row>
<entry nameend="col5" namest="col1">
<p>End of associated data section</p>
</entry>
</row>
<row>
<entry nameend="col5" namest="col1">
<p>Optional wrapped AESKW formatted payload or wrapped PKOAEP2 encoded payload (no payload if no key
present)</p>
</entry>
</row>
<row>
<entry morerows="3">
<p>058 + <i>kl</i> + <i>iead</i> + <i>uad</i></p>
</entry>
<entry morerows="3">
<p>(<i>pl</i> + 7) / 8</p>
</entry>
<entry nameend="col5" namest="col3">
<p>Contents of payload (<i>pl</i> is in <i>bits</i>) depending on the encrypted section key-wrapping
method (value at offset 26):</p>
</entry>
</row>
<row>
<entry><b>Value at offset 26</b></entry>
<entry><b>Encrypted section key-wrapping method</b></entry>
<entry><b>Meaning</b></entry>
</row>
<row>
<entry><b>X'02'</b></entry>
<entry>AESKW</entry>
<entry>An encrypted payload which the Segment 2 code creates by wrapping the unencrypted AESKW
formatted payload. The payload is made up of the integrity check value, pad length, length of hash
options and hash, hash options, hash of the associated data, key material, and padding. The key
token is internal.</entry>
</row>
<row>
<entry><b>X'03'</b></entry>
<entry>PKOAEP2</entry>
<entry>An encrypted PKOAEP2 encoded payload created using the RSAES-OAEP scheme of the PKCS #1 v2.1
standard. The message <i>M</i> is encoded for a given hash algorithm using the Bellare and Rogaway
Optimal Asymmetric Encryption Padding (OAEP) method for encoding messages. For PKAOEP2, <i>M</i> is
defined as follows:<p><i>M</i> = [32 bytes: <i>hAD</i>] &parallel; [2 bytes: bit length of the clear
key] &parallel; [clear key]</p>
<p>where <i>hAD</i> is the message digest of the associated data, and is calculated using the
SHA-256 algorithm starting at offset 30 for the length in bytes of all the associated data for the
key token (length value at offset 32). The encoded message is wrapped with an RSA public-key
according to the standard. The key token is external.</p></entry>
</row>
<row>
<entry nameend="col5" namest="col1">
<p>End of optional wrapped AESKW formatted payload or wrapped PKAOEP2 encoded payload</p>
</entry>
</row>
<row>
<entry nameend="col5" namest="col1">
<p>End of AESKW or PKOAEP2 components</p>
</entry>
</row>
<row>
<entry nameend="col5" namest="col1">
<note>All numbers are in big endian format.</note>
</entry>
</row>
</tbody>
</tgroup></table>
</refbody>
</reference>
<?Pub *0000027307?>
