<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA IBM Reference//EN"
 "ibm-reference.dtd">
<reference id="l0wskc02_aes_secmsg" xml:lang="en-us">
<title>AES SECMSG variable-length symmetric key token</title>
<titlealts>
<navtitle>AES SECMSG </navtitle><?Pub Caret -1?>
<searchtitle><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca_long"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca"/>): AES SECMSG variable-length symmetric key
token</searchtitle>
</titlealts>
<shortdesc>View a table showing the format of the SECMSG variable-length
symmetric key-token. </shortdesc>
<prolog><metadata>
<keywords><indexterm>key token<indexterm>AES SECMSG variable-length
symmetric</indexterm></indexterm><indexterm>SECMSG variable-length
symmetric</indexterm></keywords>
</metadata></prolog>
<refbody>
<table id="aes_secmsg_vlskt" pgwide="1"><title>AES SECMSG variable-length
symmetric key-token, version <ph>X'05'</ph></title><desc> <p
outputclass="summary">AES SECMSG variable-length symmetric key-token,
version <ph>X'05'</ph></p> </desc>
<tgroup cols="5" colsep="1" rowsep="1">
<colspec colname="col1" colwidth="20*"/>
<colspec colname="col2" colwidth="20*"/>
<colspec colname="col3" colwidth="20*"/>
<colspec colname="col4" colwidth="40*"/>
<colspec colname="col5" colwidth="100*"/>
<thead>
<row>
<entry colname="col1">Offset (bytes)</entry>
<entry colname="col2">Length (bytes)</entry>
<entry nameend="col5" namest="col3">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry nameend="col5" namest="col1" valign="top"> <p>Header</p> </entry>
</row>
<row>
<entry>000</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Token identifier (note that
it is intentional that an external key-token is not defined):<dl
compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'01'</dt>
<dd>Internal key-token (encrypted key is wrapped with the master key,
or there is no payload).</dd>
</dlentry></dl></p> <p>All unused values are reserved and undefined.</p> </entry>
</row>
<row>
<entry>001</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">Reserved, binary zero.</entry>
</row>
<row>
<entry>002</entry>
<entry>02</entry>
<entry nameend="col5" namest="col3"> <p>Length in bytes of the overall
token structure:<dl compact="yes">
<dlhead>
<dthd>Key token</dthd><ddhd>Minimum token length</ddhd>
</dlhead>
<dlentry>
<dt>Skeleton</dt>
<dd>46 + (2 * 2) + (2 * 3) + 0 + 0 + 0 + 0 = 56</dd>
</dlentry><dlentry>
<dt>Encrypted V1 payload</dt>
<dd>46 + (2 * 2) + (2 * 3) + 0 + 0 + 0 + ((640 + 7) / 8) = 136</dd>
</dlentry></dl></p> <dl compact="yes">
<dlhead>
<dthd>Key token</dthd><ddhd>Maximum token length</ddhd>
</dlhead>
<dlentry>
<dt>Internal</dt>
<dd>46 + (2 * 2) + (2 * 3) + 64 + 0 + 255 + ((640 + 7) / 8) = 455</dd>
</dlentry></dl> </entry>
</row>
<row>
<entry>004</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Token version number (identifies
the format of this key token):</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'05'</dt>
<dd>Version 5 format of the key token (variable-length symmetric key-token)</dd>
</dlentry></dl> </entry>
</row>
<row>
<entry>005</entry>
<entry>03</entry>
<entry nameend="col5" namest="col3"> <p>Reserved, binary zero.</p> </entry>
</row>
<row>
<entry nameend="col5" namest="col1" valign="top"> <p>End of header</p> </entry>
</row>
<row>
<entry nameend="col5" namest="col1" valign="top"> <p>Wrapping information
section (all data related to wrapping the key)</p> </entry>
</row>
<row>
<entry>008</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key material state:</p> <dl
compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>No key is present. This is called a skeleton key-token. The key
token is internal. </dd>
</dlentry><dlentry>
<dt>X'03'</dt>
<dd>Key is wrapped with the AES master-key. The encrypted section
key-wrapping method is AESKW. The key token is internal. </dd>
</dlentry></dl> <p>All unused values are reserved and undefined.</p> </entry>
</row>
<row>
<entry>009</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key verification pattern (KVP)
type:</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>No KVP (no key present or key is wrapped with an RSA public-key).
The key token is external or internal. </dd>
</dlentry><dlentry>
<dt>X'01'</dt>
<dd>AESMK (8 leftmost bytes of SHA-256 hash: X'01 || clear AES MK).
The key token is internal. </dd>
</dlentry></dl> <p>All unused values are reserved and undefined.</p> </entry>
</row>
<row>
<entry>010</entry>
<entry>16</entry>
<entry nameend="col5" namest="col3"> <p>KVP (value depends on value
of key material state, that is, the value at offset 8):</p> <dl
compact="yes">
<dlhead>
<dthd>Value at offset 8</dthd><ddhd>Value of KVP</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>The key-material state is no key present. The field should be
filled with binary zeros. The key token is internal. </dd>
</dlentry><dlentry>
<dt>X'03'</dt>
<dd>The key-material state is the key is wrapped with the AES master-key.
The field contains the MKVP of the AES master-key used to wrap the
key. The 8-byte MKVP is left-aligned in the field and padded on the
right low-order bytes with binary zeros. The key token is internal. </dd>
</dlentry></dl> <p>All unused values are reserved and undefined.</p> </entry>
</row>
<row>
<entry>026</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Encrypted section key-wrapping
method (how data in the encrypted section is protected):</p> <dl
compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>No key-wrapping method (no key present). The key token is external
or internal. </dd>
</dlentry><dlentry>
<dt>X'02'</dt>
<dd>AESKW (ANS X9.102). The key token is internal with a key wrapped
by the AES master-key. </dd>
</dlentry></dl> <p>All unused values are reserved and undefined.</p> </entry>
</row>
<row>
<entry>027</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Hash algorithm used for wrapping
key or encoding message. Meaning depends on whether the encrypted
section key-wrapping method (value at offset 26) is no key-wrapping
method or AESKW:</p> <p>No key-wrapping method (value at offset 26
is X'00')</p> <p>Hash algorithm used for wrapping key when encrypted
section key-wrapping method is no key-wrapping method:</p> <dl
compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>No hash (no key present). </dd>
</dlentry></dl> <p>All unused values are reserved and undefined. The
key token is internal.</p> <p>AESKW key-wrapping method (value at
offset 26 is X'02')</p> <p>Hash algorithm used for wrapping key when
encrypted section key-wrapping method is AESKW. The value indicates
the algorithm used to calculate the hash digest of the associated
data. The hash digest is included in the wrapped payload and is calculated
starting at offset 30 for the length in bytes of all the associated
data for the key token (length value at offset 32).</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'02'</dt>
<dd>SHA-256</dd>
</dlentry></dl> <p>All unused values are reserved and undefined. The
key token is internal.</p> </entry>
</row>
<row>
<entry>028</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Payload format version (identifies
format of the payload).</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'01'</dt>
<dd>V1 payload. The payload format depends on the encrypted section
key-wrapping method (value at offset 26): <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>There is no key-wrapping method. When no key is present, there
is no payload. The key token is internal.</dd>
</dlentry><dlentry>
<dt>X'02'</dt>
<dd>The key-wrapping method is AESKW and the payload is fixed length
based on the maximum possible key size of the algorithm for the key.
The key is padded with random data to the size of the largest key
for that algorithm. This helps to deter attacks on keys known to be
weaker. The key length cannot be inferred by the size of the payload.
The key token is internal.</dd>
</dlentry></dl></dd>
</dlentry></dl> <p>All unused values are reserved and undefined.</p> </entry>
</row>
<row>
<entry>029</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Reserved, binary zero.</p> </entry>
</row>
<row>
<entry nameend="col5" namest="col1"> <p>End of wrapping information
section</p> </entry>
</row>
<row>
<entry nameend="col5" namest="col1"> <p>AESKW components: (1) associated
data section and (2) optional wrapped AESKW formatted payload (no
payload if no key present)</p> </entry>
</row>
<row>
<entry nameend="col5" namest="col1"> <p>Associated data section</p> </entry>
</row>
<row>
<entry>030</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Associated data section version:</p> <dl
compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'01'</dt>
<dd>Version 1 format of associated data.</dd>
</dlentry></dl> </entry>
</row>
<row>
<entry>031</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Reserved, binary zero.</p> </entry>
</row>
<row>
<entry>032</entry>
<entry>02</entry>
<entry nameend="col5" namest="col3"> <p>Length in bytes of all the
associated data for the key token: 26 - 345.</p> </entry>
</row>
<row>
<entry>034</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Length in bytes of the optional
key label (<i>kl</i> ) : 0 or 64 . </p> </entry>
</row>
<row>
<entry>035</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Length in bytes of the optional
IBM extended associated data (<i>iead</i> ) : 0 . </p> </entry>
</row>
<row>
<entry>036</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Length in bytes of the optional
user-definable associated data: 0 - 255 (<i>uad</i> ). </p> </entry>
</row>
<row>
<entry>037</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Reserved, binary zero.</p> </entry>
</row>
<row>
<entry>038</entry>
<entry>02</entry>
<entry nameend="col5" namest="col3">
Length in <i>bits</i> of the wrapped payload ( <i>pl</i> ): 0, 640.
<p>For no key-wrapping method (no key present), <i>pl</i>is 0.</p> 
<p>For an AESKW formatted payload, <i>pl</i>is based on the key size of the algorithm type and
the payload format version:</p> 
<ul>
<li> <p>AES algorithm (value at offset 41 is X'02') </p> </li>
<li>An AES key can have a length of 16, 24, or 32 bytes (128, 192, or 256 bits). The payload length
for a given AES key size and payload format are as follows:
<table><desc><p outputclass="summary">Three columns with AES key size and V0 and V1 payload lengths</p></desc>
<tgroup cols="3" colsep="0" rowsep="0">
<colspec colname="col1" colwidth="*"/>
<colspec colname="col2" colwidth="*"/>
<colspec colname="col3" colwidth="*"/>
<thead>
<row>
<entry>AES key size</entry>
<entry>Bit length of V0 payload (value at offset 28 is X'00')</entry>
<entry>Bit length of V1 payload (value
at offset 28 is X'01')</entry>
</row>
</thead>
<tbody>
<row>
<entry>16 bytes (128 bits)</entry>
<entry>Not applicable</entry>
<entry>640</entry>
</row>
<row>
<entry>24 bytes (192 bits) </entry>
<entry>Not applicable</entry>
<entry>640</entry>
</row>
<row>
<entry>32 bytes (256 bits)</entry>
<entry>Not applicable</entry>
<entry>640</entry>
</row>
</tbody>
</tgroup>
</table>
</li>
</ul> 
</entry>
</row>
<row>
<entry>040</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Reserved, binary zero.</p> </entry>
</row>
<row>
<entry>041</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Algorithm type (algorithm
for which the key can be used):</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'02'</dt>
<dd>AES</dd>
</dlentry></dl> <p>All unused values are reserved and undefined.</p> </entry>
</row>
<row>
<entry>042</entry>
<entry>02</entry>
<entry nameend="col5" namest="col3"> <p>Key type (general class of
the key):</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'000A'</dt>
<dd>SECMSG</dd>
</dlentry></dl> <p>All unused values are reserved and undefined.</p> </entry>
</row>
<row>
<entry>044</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key usage fields count (<i>kuf</i>):
2. Key-usage field information defines restrictions on the use of
the key.</p> <p>Each key-usage field is 2 bytes in length. The value
in this field indicates how many 2-byte key usage fields follow.</p> </entry>
</row>
<row>
<entry>045</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key-usage field 1, high-order
byte (secure message encryption enablement):</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>Enable the encryption of PINs in an EMV secure message (SMPIN).</dd>
</dlentry></dl> <p>All unused values are reserved and undefined.</p> </entry>
</row>
<row>
<entry>046</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> Key-usage field 1, low-order
byte (user-defined extension control). </entry>
</row>
<row>
<entry>047</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key-usage field 2, high-order
byte (verb restriction):</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>X'00'</dt>
<dd>Any verb can use this key (ANY-USE).</dd>
</dlentry><dlentry>
<dt>X'01'</dt>
<dd>Only CSNBDPC can use this key (DPC-ONLY).</dd>
</dlentry></dl> <p>All unused values are reserved and undefined.</p> </entry>
</row>
<row>
<entry>048</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key-usage field 2, low-order
byte (reserved).</p> <p>All bits are reserved and must be zero.</p> </entry>
</row>
<row>
<entry>049</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key management fields count
(<i>kmf</i>): 3. Key-management field information describes how the
data is to be managed or helps with management of the key material.</p> <p>Each
key-management field is 2 bytes in length. The value in this field
indicates how many 2-byte key management fields follow.</p> </entry>
</row>
<row>
<entry>050</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key-management field 1, high-order
byte (symmetric-key export control). Note that an AES SECMSG key cannot
be exported because it has no external key-token defined.</p> <p>Symmetric-key
export control:</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'1xxx xxxx'</dt>
<dd>Undefined.</dd>
</dlentry><dlentry>
<dt>B'0xxx xxxx'</dt>
<dd>Prohibit export using symmetric key (NOEX-SYM).</dd>
</dlentry></dl> <p>Unauthenticated asymmetric-key export control:</p> <dl
compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'x1xx xxxx'</dt>
<dd>Undefined.</dd>
</dlentry><dlentry>
<dt>B'x0xx xxxx'</dt>
<dd>Prohibit export using unauthenticated asymmetric key (NOEXUASY).</dd>
</dlentry></dl> <p>Authenticated asymmetric-key export control:</p> <dl
compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'xx1x xxxx'</dt>
<dd>Undefined.</dd>
</dlentry><dlentry>
<dt>B'xx0x xxxx'</dt>
<dd>Prohibit export using authenticated asymmetric key (NOEXAASY).</dd>
</dlentry></dl> <p>Raw-key export control:</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'xxx1 xxxx'</dt>
<dd>Undefined.</dd>
</dlentry><dlentry>
<dt>B'xxx0 xxxx'</dt>
<dd>Prohibit export using raw key (NOEX-RAW). Defined for future use.
Currently ignored.</dd>
</dlentry></dl> <p>All unused bits are reserved and must be zero.</p> </entry>
</row>
<row>
<entry>051</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key-management field 1, low-order
byte (export control by algorithm). Note that an AES SECMSG key can
only be internal; it cannot be external.</p> <p>DES-key export control:</p> <dl
compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'1xxx xxxx'</dt>
<dd>Prohibit export using DES key (NOEX-DES).</dd>
</dlentry><dlentry>
<dt>B'0xxx xxxx'</dt>
<dd>Undefined.</dd>
</dlentry></dl> <p>AES-key export control:</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'x1xx xxxx'</dt>
<dd>Prohibit export using AES key (NOEX-AES).</dd>
</dlentry><dlentry>
<dt>B'x0xx xxxx'</dt>
<dd>Undefined.</dd>
</dlentry></dl> <p>RSA-key export control:</p> <dl compact="yes">
<dlhead>
<dthd>Value</dthd><ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'xxxx 1xxx'</dt>
<dd>Prohibit export using RSA key (NOEX-RSA).</dd>
</dlentry><dlentry>
<dt>B'xxxx 0xxx'</dt>
<dd>Undefined.</dd>
</dlentry></dl> <p>All unused bits are reserved and must be zero.</p> </entry>
</row>
<row>
<entry>052</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key-management field 2, high-order
byte (key completeness).</p> </entry>
</row>
<row>
<entry>053</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key-management field 2, low-order
byte (security history).</p> </entry>
</row>
<row>
<entry>054</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key-management field 3, high-order
byte (pedigree original).</p> </entry>
</row>
<row>
<entry>055</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3"> <p>Key-management field 3, low-order
byte (pedigree current).</p> </entry>
</row>
<row>
<entry>056</entry>
<entry>01</entry>
<entry nameend="col5" namest="col3">Optional key label.</entry>
</row>
<row>
<entry> <p>056 + <i>kl</i></p> </entry>
<entry><i>iead</i></entry>
<entry nameend="col5" namest="col3">Optional IBM extended associated
data (unused).</entry>
</row>
<row>
<entry> <p>056 + <i>kl</i> + <i>iead</i></p> </entry>
<entry><i>uad</i></entry>
<entry nameend="col5" namest="col3">Optional user-defined associated
data.</entry>
</row>
<row>
<entry nameend="col5" namest="col1"> <p>End of associated data section</p> </entry>
</row>
<row>
<entry nameend="col5" namest="col1"> <p>Optional wrapped AESKW formatted
payload, or wrapped PKOAEP2 encoded payload (no payload if no key
present)</p> </entry>
</row>
<row>
<entry morerows="4">056 + <i>kl</i> + <i>iead</i> + <i>uad</i></entry>
<entry morerows="4">(<i>pl</i> + 7) / 8</entry>
<entry nameend="col5" namest="col3">Contents of payload (<i>pl</i> is
in <i>bits</i> ) depending on the encrypted section key-wrapping method
(value at offset 26): </entry>
</row>
<row>
<entry><b>Value at offset 26</b></entry>
<entry><b>Encrypted section key-wrapping method</b></entry>
<entry><b>Meaning</b></entry>
</row>
<row>
<entry><b>X'00'</b></entry>
<entry>No key-wrapping method. Only applies when key is clear, that is, when the value at offset 8 = X'01'.
</entry>
<entry>Only the key material will be in the payload. The key token is external or internal.</entry>
</row>
<row>
<entry><b>X'02'</b></entry>
<entry>AESKW</entry>
<entry>An encrypted payload which the Segment 2 code creates by wrapping
the unencrypted AESKW formatted payload. The payload is made up of
the integrity check value, pad length, length of hash options and
hash, hash options, hash of the associated data, key material, and
padding. The key token is internal.</entry>
</row>
<row>
<entry><b>X'03'</b></entry>
<entry>PKOAEP2</entry>
<entry>An encrypted PKOAEP2 payload which the Segment 2 code
creates using the RSAES-OAEP scheme of the PKCS #1 v2.1 standard. The message <i>M</i> is encoded
for a given hash algorithm using the Bellare and Rogaway Optimal Asymmetric Encryption Padding
(OAEP) method for encoding messages. For PKAOEP2, <i>M</i> is defined as follows: <p><i>M</i> = [32
bytes: <i>hAD</i>] ∥ [2 bytes: bit length of the clear key] ∥ [clear key]</p><p>where <i>hAD</i> is
the message digest of the associated data, and is calculated using the SHA-256 algorithm starting at
offset 30 for the length in bytes of all the associated data for the key token (length value at
offset 32). The encoded message is wrapped with an RSA public-key according to the standard. The key
token is external.</p></entry>
</row>
<row>
<entry nameend="col5" namest="col1">End of optional wrapped AESKW
formatted payload</entry>
</row>
<row>
<entry nameend="col5" namest="col1">End of AESKW components</entry>
</row>
<row>
<entry nameend="col5" namest="col1"> <note>All numbers are in big
endian format.</note> </entry>
</row>
</tbody>
</tgroup>
</table>
</refbody>
</reference>
<?Pub *0000019388?>
