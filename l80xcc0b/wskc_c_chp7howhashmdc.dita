<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept
  PUBLIC "-//IBM//DTD DITA IBM Concept//EN" "ibm-concept.dtd">
<concept xml:lang="en-us" id="l0wskc02_chp7howhashmdc">
<title>How hashing functions and MDCs are used</title>
<titlealts>
<navtitle>How hashing functions and MDCs are used</navtitle>
<searchtitle><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca_long"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca"/>): How hashing functions and MDCs are
used</searchtitle>
</titlealts><shortdesc>Hashing functions include the MDC and one-way hash. </shortdesc>
<prolog><metadata><keywords>

<indexterm>Modification Detection Code (MDC)<indexterm>generate</indexterm></indexterm>
<indexterm>Modification Detection Code (MDC)<indexterm>verify</indexterm></indexterm>
</keywords>
</metadata>
</prolog>
<conbody>
<p>You need to hash text before submitting it to the <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmdsg"/> and <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmdsv"/> verbs
(see  <xref href="wskc_r_pk3.dita#l0wskc02_pk3"/>). <ph>CCA</ph> supports
the SHA-1, MD5, and RIPEMD-160 hashing functions.</p>
<p>When a message is sent, an application program can generate a <ph>hash
or a </ph> Modification Detection Code (MDC) for it using the <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmowh"/> <ph>verb</ph>.
This verb computes the <ph>hash or MDC,</ph> a <ph>short, fixed-length</ph> value,
using a one-way cryptographic function and the message text. The originator
of the message ensures the <ph>hash or</ph> MDC is transmitted with
integrity to the intended receiver of the message. For example, the <ph>value</ph> could
be published in a reliable source of public information.</p>
<p>When the receiver gets the message, an application program calls
the <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmowh"/> verb to generate a new hash or MDC using the same function
and message text that were used by the sender. The application program
can compare the new <ph>value</ph> with the one generated by the originator
of the message. If the <ph>two values</ph> match, the receiver knows
the message was not altered.</p>
<p>In a similar manner, <ph>hashes and</ph> MDCs can be used to ensure
the integrity of data stored on the system or on removable media,
such as tape.</p>
<p>By using <ph>hashes and</ph> MDCs, you get the following benefits: 
<ul>
<li><b>For data transmitted over a network between locations
that do not share a secret key,</b> you can ensure the data has not
been altered during transmission. It is easy to compute a <ph>hash
or</ph> MDC for specific data, yet hard to find data that will result
in a given <ph>hash or</ph> MDC. In effect, the problem of ensuring
the integrity of a large file is reduced to ensuring the integrity
of a <ph>short, fixed-length</ph> value.</li>
<li><b>For data stored on tape or DASD,</b> you can
ensure that the data read back onto the system was the same as the
data written onto the tape or DASD. After a <ph>hash</ph> has been
established for a file, the <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmowh"/> verb can be run at any later
time on the file.  The resulting <ph>value</ph> can be compared with
the stored <ph>value</ph> to detect deliberate or inadvertent modification.</li>
</ul></p>
<p>For more information, see <xref href="wskc_c_algomdc.dita#l0wskc02_algomdc"/>.</p>
</conbody></concept>