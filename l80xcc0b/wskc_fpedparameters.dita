<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference
  PUBLIC "-//IBM//DTD DITA IBM Reference//EN" "ibm-reference.dtd">
<reference xml:lang="en-us" id="fpedparameters">
<title>Parameters</title><titlealts>
<navtitle>Parameters</navtitle>
<searchtitle><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca_long"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca"/>): Parameters for  <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfped"/></searchtitle>
</titlealts>
<shortdesc>The parameters for <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfped"
/>.</shortdesc>
<prolog><metadata><keywords>
<indexterm><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmfped"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfped"
/>)<indexterm>parameters</indexterm></indexterm>
</keywords>
</metadata>
</prolog>
<refbody>
<section><p>For the definitions of the <synph><var>return_code</var></synph>, <synph><var>reason_code</var></synph>, <synph><var>exit_data_length</var></synph>,
and <synph><var>exit_data</var></synph> parameters, see <xref href="wskc_c_vparms.dita#l0wskc02_vparms"/>.</p></section><section>
<parml>
<plentry><pt>rule_array_count</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>A pointer to an integer variable containing the number of elements in the
<parmname>rule_array</parmname> variable. The minimum value is 5. The maximum value is 10.</pd></plentry>
<plentry><pt>rule_array</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String array</entry>
</row>
</tbody>
</tgroup>
</table>Keywords that provide control information to the verb. The <parmname>rule_array</parmname>
keywords are described in <xref href="#fpedparameters/fped_table" format="dita"/>. 
<note>At least one character set keyword is required.</note>
<table id="fped_table" pgwide="1" frame="all">
<title>Keywords for <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmfped"/> control
information</title>
<desc>
<p outputclass="summary">Keywords for <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmfped"/> control information</p>
</desc>
<tgroup cols="2">
<colspec colname="col1" colwidth="2*"/>
<colspec colname="col2" colwidth="14*"/>
<thead>
<row>
<entry>Keyword</entry>
<entry>Description</entry>
</row>
</thead>
<tbody>
<row>
<entry namest="col1" nameend="col2"><b><i>Processing method</i></b>
(required)</entry>
</row>
<row>
<entry><synph><kwd>VMDS</kwd></synph></entry>
<entry>Specifies that the VDSP method (Visa Data Secure Platform
method, formally known as the Visa Merchant Data Secure (VMDS) method) is to be used for
processing.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Key management method</i></b>
(one required)</entry>
</row>
<row>
<entry><synph><kwd>STATIC</kwd></synph></entry>
<entry>Specifies the use of double length (2-key) triple-DES symmetric
keys. This is a non-DUKPT key.</entry>
</row>
<row>
<entry><synph><kwd>DUKPT</kwd></synph></entry>
<entry>Specifies the use of the transaction unique general purpose Data Encryption Keys generated by
the DUKPT process at the point of service for data encryption. This is required if VFPE mode is
specified. Otherwise, this is optional. <p rev="sh21i1">Both, the DES DUKPT and AES DUKPT key
derivation methods are supported. The content of the <parmname>derivation_data</parmname> parameter
determines which DUKPT method is used. </p>
</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Algorithm</i></b>
(required)</entry>
</row>
<row>
<entry><synph><kwd>TDES</kwd></synph></entry>
<entry>Specifies the use of CBC mode triple-DES encryption.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Mode</i></b> (one
required)</entry>
</row>
<row>
<entry><synph><kwd>CBC</kwd></synph></entry>
<entry>Specifies the use of CBC mode. This is the mode for the standard
encryption option.</entry>
</row>
<row>
<entry><synph><kwd>VFPE</kwd></synph></entry>
<entry>Specifies the use of Visa format preserving encryption.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>PAN input output character
set</i></b> (one required if the <parmname>clear_PAN_length</parmname> variable is greater than 0.
Otherwise, it is not allowed.)</entry>
</row>
<row>
<entry><synph><kwd>PAN8BITA</kwd></synph></entry>
<entry>Specifies that the PAN data character set is ASCII represented in
binary form. Valid ASCII values are in the range 0 - 9 (X'30' - X'39').</entry>
</row>
<row>
<entry><synph><kwd>PAN4BITX</kwd></synph></entry>
<entry>Specifies that the PAN data character set is 4-bit hex with two
digits per byte. Valid 4-bit hexadecimal values are in the range X'0' - X'9'.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Cardholder name input output
character set</i></b> (required if the <parmname>clear_cardholder_name_length</parmname> variable is
greater than 0. Otherwise, it is not allowed.)</entry>
</row>
<row>
<entry><synph><kwd>CN8BITA</kwd></synph></entry>
<entry rev="sh16i1">Specifies that the cardholder name character set is ASCII represented in binary
format, one character per byte. See <xref
href="wskc_vfpe_concept.dita#vfpe_concept/vfpe_alphabet_field_type"/> for valid characters.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Track_1 input output character
set</i></b> (required if the <parmname>clear_dtrack1_data_length</parmname> variable is greater than
0. Otherwise, it is not valid.)</entry>
</row>
<row>
<entry><synph><kwd>TK18BITA</kwd></synph></entry>
<entry rev="sh16i1">Specifies that the track 1 discretionary data character set is ASCII represented
in binary format, one character per byte. See <xref
href="wskc_vfpe_concept.dita#vfpe_concept/vfpe_alphabet_field_type"/> for valid characters.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Track_2 input output character
set</i></b> (required if the <parmname>clear_dtrack2_data_length</parmname> variable is greater than
0. Otherwise, it is not valid.)</entry>
</row>
<row>
<entry><synph><kwd>TK28BITA</kwd></synph></entry>
<entry>Specifies that the track 2 discretionary data character set is
ASCII represented in binary format, one character per byte. Valid ASCII values are in the range 0 -
9 (X'30' - X'39') and A - F (X'41' - X'46').</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>PIN encryption key output
selection</i></b> (one, optional, if DUKPT is specified. Otherwise, it is not valid.)</entry>
</row>
<row>
<entry><synph><kwd>NOPINKEY</kwd></synph></entry>
<entry>Do not return a DUKPT PIN encryption key. This is the
default.</entry>
</row>
<row>
<entry><synph><kwd>PINKEY</kwd></synph></entry>
<entry>Return a DUKPT PIN encryption key.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>PAN check digit
compliance</i></b> (one required if mode VFPE and the pan character set keyword is present.
Otherwise, it is not allowed.)</entry>
</row>
<row>
<entry><synph><kwd>CMPCKDGT</kwd></synph></entry>
<entry>Last digit of the PAN contains a compliant check digit per ISO/IEC
7812-1.</entry>
</row>
<row>
<entry><synph><kwd>NONCKDGT</kwd></synph></entry>
<entry>Last digit of the PAN does not contain a compliant check digit per
ISO/IEC 7812-1.</entry>
</row>
</tbody>
</tgroup>
</table></pd></plentry>
<plentry>
<pt>enc_PAN_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>enc_PAN</parmname> parameter in bytes if the mode is
CBC or the number of PAN digits if the mode is VFPE. The value is either 0 or in the range 15 - 19
for VFPE. The value must be 0 or 16 if the standard option with CBC mode is selected. The value is
zero when the PAN has not been presented for decryption.</pd>
</plentry>
<plentry>
<pt>enc_PAN</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The enciphered primary account number (PAN) that is to be decrypted. For VFPE mode, if the
PAN contains an odd number of 4-bit digits, the data is left justified in the PAN variable and the
right-most 4 bits are ignored.</pd>
</plentry>
<plentry>
<pt>enc_cardholder_name_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>enc_cardholder_name</parmname> parameter in bytes. The input
value is either 0 or in the range 1 - 32, inclusive for VFPE. For the standard method, the input
value is either 0 or in the range 2 - 32 for VFPE. For CBC mode, the input value is 0, 16, 24, 32,
or 40. The value is zero when the cardholder name has not been presented for decryption.</pd>
</plentry>
<plentry>
<pt>enc_cardholder_name</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The enciphered cardholder full name that is to be decrypted. Only characters in <xref
href="wskc_vfpe_concept.dita#vfpe_concept/vfpe_track1_discrdata_cardholder"/> are valid.</pd>
</plentry>
<plentry>
<pt>enc_dtrack1_data_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>enc_dtrack1_data</parmname> parameter in bytes. The
input value is either 0 or in the range 1 - 56, inclusive for VFPE. For the standard method, the
input value is either 0 or in the range 1 - 56 for VFPE. For CBC mode, the input value is 0 or 16,
24, 32, 40, 48, 56, or 64. The value is zero when the track 1 discretionary data has not been
presented for decryption.</pd>
</plentry>
<plentry>
<pt>enc_dtrack1_data</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The encrypted track 1 data that is to be decrypted. Only characters in <xref
href="wskc_vfpe_concept.dita#vfpe_concept/vfpe_track1_discrdata_cardholder"/> are valid.</pd>
</plentry>
<plentry>
<pt>enc_dtrack2_data_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>enc_dtrack2_data</parmname> parameter in bytes. The
input value is either 0 or in the range 1 - 19 for VFPE. For mode CBC, the input value is 0, 8, or
16. The value is zero when the track 2 discretionary data is not presented for decryption.</pd>
</plentry>
<plentry>
<pt>enc_dtrack2_data</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The encrypted track 2 data that is to be decrypted.</pd>
</plentry>
<plentry>
<pt>key_identifier_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>key_identifier</parmname> parameter in bytes. <p
rev="sh21i1">When DES DUKPT method is specified, set the value to 64. When AES DUKPT method is used
the maximum value is 3500.</p></pd>
</plentry>
<plentry>
<pt>key_identifier</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The identifier of the key that is used to either decrypt the card data (key management
STATIC) or derive the <parmname>DUKPT_PIN_key_identifer</parmname> (key management DUKPT). The
<term>key identifier</term> is an operational token or the key label of an operational token in key
storage. <p rev="sh21i1">For the DES DUKPT key derivation method, the key type must be KEYGENKY. In
addition, it must have a control vector with bit 18 equal to B'1' (UKPT). The base derivation key is
the one from which the operational keys are derived using the DUKPT algorithm defined in ANS X9.24-1
2017 (Part 1). </p><p rev="sh21i1">For the AES DUKPT key derivation method, this is an AES DKYGENKY
key type with the A-DUKPT bit set to 1 in the low-order byte of key usage field 1, indicating  this
key is allowed to be used as base derivation key (BDK). The BDK is the one from which the
operational keys are derived using the DUKPT algorithm defined in ANSI x9.24-3 2017.</p><p>For key
management STATIC, (Zone Encryption Key in the VDSP specification), the key type must be either
CIPHER or ENCIPHER. For production purposes, it is recommended that the key have left and right
halves that are not equal.</p><note>Data keys are not supported.</note>
<p>If the token supplied was encrypted under the old master key, the token is returned encrypted
under the current master key.</p>
</pd>
</plentry>
<plentry>
<pt>derivation_data_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>derivation_data</parmname> parameter in bytes. <ph
rev="sh21i1">To specify the DES DUKPT method, set
the value to 10 if the key management method DUKPT is specified in the rule array. To specify the AES
DUKPT method, set the value to 20 if the key management method DUKPT is specified in the rule
array. Otherwise, this value must be 0.</ph></pd>
</plentry>
<plentry>
<pt>derivation_data</pt>
<pd>
<table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>
<p rev="sh21i1">When specifying the DES DUKPT method, the <parmname>derivation_data</parmname>
parameter  contains the 80 bit (10 byte) derivation data that is used as input to the DUKPT
derivation process. The derivation data contains the current key serial number (CKSN), which is
composed of the 59 bit initial key serial number, and concatenated with the 21 bit value of the
current encryption counter, which the device increments for each new transaction. This field is in
binary format.</p>
<p rev="sh21i1">When specifying the AES-DUKPT method, the <parmname>derivation_data</parmname>
parameter contains the 20 byte AES-DUKPT derivation data. See <xref href="wskc_aes_dukpt.dita"/> for
the layout of the AES-DUKPT derivation data. The algorithm indicator must be set to X'0000' (2- key
TDES). The key usage indicator must be set to X'1000' (PIN Encryption).</p>
</pd>
</plentry>
<plentry>
<pt>clear_PAN_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the number of PAN digits in the <parmname>clear_PAN</parmname> parameter. This
value must either be 0 or in the range 15 - 19, inclusive on output.</pd>
</plentry>
<plentry>
<pt>clear_PAN</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter returns the deciphered primary account number. The full account number,
including check digit, is recovered. The data for this parameter is returned in binary format. It is
the binary representation of 4-bit hex (keyword PAN4BITX) or ASCII (keyword PAN8BITA) as indicated
by the supplied rule array keyword. The clear PAN is left justified in this field.</pd>
</plentry>
<plentry>
<pt>clear_cardholder_name_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>clear_cardholder_name</parmname> parameter in bytes. This
output value is either 0 or in the range 2 - 32 on output. The variable can be larger on input.
However, on output, this field is updated to indicate the actual number of bytes returned by the
service.</pd>
</plentry>
<plentry>
<pt>clear_cardholder_name</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter returns the deciphered cardholder full name. The output data for this
parameter is in binary format. It is the binary representation of ASCII as indicated by the supplied
rule array keyword.</pd>
</plentry>
<plentry>
<pt>clear_dtrack1_data_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>clear_dtrack1_data</parmname> parameter in bytes. The
output value is either 0 or in the range 1 - 56. The value can be larger on input. However, on
output, this field is updated to indicate the actual number of bytes returned by the service.</pd>
</plentry>
<plentry>
<pt>clear_dtrack1_data</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter returns the deciphered discretionary track 1 data.</pd>
</plentry>
<plentry>
<pt>clear_dtrack2_data_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>clear_dtrack2_data</parmname> parameter in bytes. The
output value is either 0 or in the range 1 - 19. The value can be larger on input. However, on
output, this field is updated to indicate the actual number of bytes returned by the service.</pd>
</plentry>
<plentry>
<pt>clear_dtrack2_data</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter returns the deciphered discretionary track 2 data.</pd>
</plentry>
<plentry>
<pt>DUKPT_PIN_key_identifier_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>DUKPT_PIN_key_identifier</parmname> parameter in
bytes. If the PINKEY rule-array keyword is specified, set this value to 64. Otherwise, set this
value to 0. On output, the variable is updated with the length of the data returned in the
<parmname>DUKPT_PIN_key_identifier</parmname> variable.</pd>
</plentry>
<plentry>
<pt>DUKPT_PIN_key_identifier</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>On input, this parameter must contain a DES OPINENC or IPINENC skeleton token. On output, it
contains the DES token with the derived DES OPINENC or IPINENC key.</pd>
</plentry>
<plentry>
<pt>reserved1_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>reserved1</parmname> parameter in bytes. The value
must be 0.</pd>
</plentry>
<plentry>
<pt>reserved1</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter is ignored.</pd>
</plentry>
<plentry>
<pt>reserved2_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>reserved2</parmname> parameter in bytes. The value
must be 0.</pd>
</plentry>
<plentry>
<pt>reserved2</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter is ignored.</pd>
</plentry>
</parml></section>
</refbody></reference>
