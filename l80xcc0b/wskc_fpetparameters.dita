<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference
  PUBLIC "-//IBM//DTD DITA IBM Reference//EN" "ibm-reference.dtd">
<reference xml:lang="en-us" id="fpetparameters">
<title>Parameters</title>
<titlealts>
<navtitle>Parameters</navtitle>
<searchtitle><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca_long"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca"/>): Parameters for <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfpet"/></searchtitle>
</titlealts>
<shortdesc>The parameters for <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfpet"
/>.</shortdesc>
<prolog>
<metadata>
<keywords>
<indexterm><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmfpet"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfpet"
/>)<indexterm>parameters</indexterm></indexterm>
</keywords>
</metadata>
</prolog>
<refbody>
<section>
<p>For the definitions of the <synph><var>return_code</var></synph>,
<synph><var>reason_code</var></synph>, <synph><var>exit_data_length</var></synph>, and
<synph><var>exit_data</var></synph> parameters, see <xref href="wskc_c_vparms.dita#l0wskc02_vparms"
/>.</p>
</section>
<section>
<parml>
<plentry>
<pt>rule_array_count</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>A pointer to an integer variable containing the number of elements in the
<parmname>rule_array</parmname> variable. The minimum value is 4. The maximum value is 10.</pd>
</plentry>
<plentry>
<pt>rule_array</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String array</entry>
</row>
</tbody>
</tgroup>
</table>Keywords that provide control information to the verb. The <parmname>rule_array</parmname>
keywords are described in <xref href="#fpetparameters/fpet_table" format="dita"/>. <note>At least
one character set keyword is required.</note><table id="fpet_table" pgwide="1" frame="all"
><title>Keywords for <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmfpet"/> control
information</title><desc>
<p outputclass="summary">Keywords for <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmfpet"/> control information</p>
</desc><tgroup cols="2" colsep="1" rowsep="1">
<colspec colname="col1" colwidth="2*"/>
<colspec colname="col2" colwidth="14*"/>
<thead>
<row>
<entry valign="bottom" align="left">Keyword</entry>
<entry valign="bottom" align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry namest="col1" nameend="col2"><b><i>Processing method</i></b> (required)</entry>
</row>
<row>
<entry><synph><kwd>VMDS</kwd></synph></entry>
<entry>Specifies that the VDSP method (Visa Data Secure Platform method, formally known as the Visa
Merchant Data Secure (VMDS) method) is to be used for processing.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Key management method</i></b> (one required)</entry>
</row>
<row>
<entry><synph><kwd>STATIC</kwd></synph></entry>
<entry>Specifies the use of double length (2-key) triple-DES symmetric keys. This is a non-DUKPT
key.</entry>
</row>
<row>
<entry><synph><kwd>DUKPT</kwd></synph></entry>
<entry>Specifies the use of the transaction unique general purpose Data Encryption Keys generated by
the DUKPT process at the point of service for data encryption. This is required if VFPE mode is
specified. Otherwise, this is optional.<p rev="sh21i1">Both DES DUKPT and AES DUKPT key derivation
methods are supported. The content of the <parmname>derivation_data</parmname> parameter determines
which DUKPT method is used.</p></entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Algorithm</i></b> (required)</entry>
</row>
<row>
<entry><synph><kwd>TDES</kwd></synph></entry>
<entry>Specifies the use of CBC mode triple-DES encryption.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Mode</i></b> (one required)</entry>
</row>
<row>
<entry><synph><kwd>CBC</kwd></synph></entry>
<entry>Specifies the use of CBC mode. This is the mode for the standard encryption option.</entry>
</row>
<row>
<entry><synph><kwd>VFPE</kwd></synph></entry>
<entry>Specifies the use of Visa format preserving encryption.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>PAN input output character set</i></b> (one required if
the <parmname>clear_PAN_length</parmname> variable is greater than 0. Otherwise, it is not
allowed.)</entry>
</row>
<row>
<entry><synph><kwd>PAN8BITA</kwd></synph></entry>
<entry>Specifies that the PAN data character set is ASCII represented in binary form. Valid only for
VFPE mode.</entry>
</row>
<row>
<entry><synph><kwd>PAN4BITX</kwd></synph></entry>
<entry>Specifies that the PAN data character set is 4-bit hex with two digits per byte. Valid only
for VFPE mode.</entry>
</row>
<row>
<entry><synph><kwd>PAN-EBLK</kwd></synph></entry>
<entry>Specifies that the PAN data is in a CBC encrypted block. Valid only for CBC mode.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Cardholder name input output character set</i></b>
(required if the <parmname>clear_cardholder_name_length</parmname> variable is greater than
0.)</entry>
</row>
<row>
<entry><synph><kwd>CN8BITA</kwd></synph></entry>
<entry rev="sh16i1">Specifies that the cardholder name character set is ASCII represented in binary
format, one character per byte. See <xref
href="wskc_vfpe_concept.dita#vfpe_concept/vfpe_alphabet_field_type"/> for valid characters.</entry>
</row>
<row>
<entry><synph><kwd>CN-EBLK</kwd></synph></entry>
<entry>Specifies that the cardholder name data is in a CBC-encrypted block.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Track_1 input output character set</i></b> (required if
the <parmname>clear_dtrack1_data_length</parmname> variable is greater than 0. Otherwise, it is not
valid.)</entry>
</row>
<row>
<entry><synph><kwd>TK18BITA</kwd></synph></entry>
<entry rev="sh16i1">Specifies that the track 1 discretionary data character set is ASCII represented
in binary format, one character per byte. See <xref
href="wskc_vfpe_concept.dita#vfpe_concept/vfpe_alphabet_field_type"/> for valid characters.</entry>
</row>
<row>
<entry><synph><kwd>TK1-EBLK</kwd></synph></entry>
<entry>Specifies that the track 1 discretionary data is in a CBC-encrypted block. Valid only for CBC
mode.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Track_2 input output character set</i></b> (required if
the <parmname>clear_dtrack2_data_length</parmname> variable is greater than 0. Otherwise, it is not
valid.)</entry>
</row>
<row>
<entry><synph><kwd>TK28BITA</kwd></synph></entry>
<entry>Specifies that the track 2 discretionary data character set is ASCII represented in binary
format. Valid only for VFPE mode.</entry>
</row>
<row>
<entry><synph><kwd>TK2-EBLK</kwd></synph></entry>
<entry>Specifies that the track 2 discretionary data is in a CBC encrypted block. Valid only for CBC
mode.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>PIN encryption key output selection</i></b> (one,
optional, if DUKPT is specified. Otherwise, it is not valid.)</entry>
</row>
<row>
<entry><synph><kwd>NOPINKEY</kwd></synph></entry>
<entry>Do not return a DUKPT PIN encryption key. This is the default.</entry>
</row>
<row>
<entry><synph><kwd>PINKEY</kwd></synph></entry>
<entry>Return a DUKPT PIN encryption key.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>PAN check digit compliance</i></b> (one required if mode
VFPE and the PAN input character set keyword is present. Otherwise, it is not allowed.)</entry>
</row>
<row>
<entry><synph><kwd>CMPCKDGT</kwd></synph></entry>
<entry>Last digit of the PAN contains a compliant check digit per ISO/IEC 7812-1.</entry>
</row>
<row>
<entry><synph><kwd>NONCKDGT</kwd></synph></entry>
<entry>Last digit of the PAN does not contain a compliant check digit per ISO/IEC 7812-1.</entry>
</row>
</tbody>
</tgroup></table></pd>
</plentry>
<plentry>
<pt>input_PAN_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>input_PAN</parmname> parameter in bytes if the mode is
CBC. Specifies the number of PAN digits if the mode is VFPE. The value is 0 if PAN data has not been
presented for translation. Otherwise, the value is in the range 15 - 19 for VFPE. The value must be
16 if the standard option with CBC mode is selected.</pd>
</plentry>
<plentry>
<pt>input_PAN</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The enciphered primary account number (PAN) that is to be translated. For VFPE mode, if the
PAN contains an odd number of 4-bit digits, the data is left justified in the PAN variable and the
right-most 4 bits are ignored.</pd>
</plentry>
<plentry>
<pt>input_cardholder_name_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>input_cardholder_name</parmname> parameter in bytes.
This value must be 0 if cardholder name is not presented for translation. Otherwise, the value is in
the range 1 - 32 for VFPE. For CBC mode, the input value is either 16, 24, 32, or 40.</pd>
</plentry>
<plentry>
<pt>input_cardholder_name</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The enciphered cardholder full name that is to be translated. Only characters in <xref
href="wskc_vfpe_concept.dita#vfpe_concept/vfpe_track1_discrdata_cardholder"/> are valid.</pd>
</plentry>
<plentry>
<pt>input_dtrack1_data_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>input_dtrack1_data</parmname> parameter in bytes. This
value must be 0 if track 1 discretionary data is not presented for translation. Otherwise, the value
is in the range 1 - 56 for VFPE. For CBC mode, the input value is either 16, 24, 32, 40, 48, 56, or
64.</pd>
</plentry>
<plentry>
<pt>input_dtrack1_data</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The encrypted track 1 data that is to be translated. Only characters in <xref
href="wskc_vfpe_concept.dita#vfpe_concept/vfpe_track1_discrdata_cardholder"/> are valid.</pd>
</plentry>
<plentry>
<pt>input_dtrack2_data_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>input_dtrack2_data</parmname> parameter in bytes. This
value must be 0 if track 2 discretionary data is not presented for translation. Otherwise, the value
is in the range 1 - 19 for VFPE. For CBC mode, the input value is either 8 or 16.</pd>
</plentry>
<plentry>
<pt>input_dtrack2_data</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The encrypted track 2 data that is to be translated.</pd>
</plentry>
<plentry>
<pt>input_key_identifier_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>input_key_identifier</parmname> parameter in bytes.
<ph rev="sh21i1">When DES-DUKPT method is specified set the value to 64. When AES-DUKPT method is
used the maximum value is 3500.</ph></pd>
</plentry>
<plentry>
<pt>input_key_identifier</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The identifier of the key that is used to either decrypt the card data (key management
STATIC) or derive the <parmname>DUKPT_PIN_key_identifer</parmname> (key management DUKPT). The
<term>key identifier</term> is an operational token or the key label of an operational token in key
storage. <p rev="sh21i1">For DES-DUKPT, the key type must be KEYGENKY. In addition, it must have a
control vector with bit 18 equal to B'1' (UKPT). The base derivation key is the one from which the
operational keys are derived using the DUKPT algorithm defined in ANSI X9.24-1 2007 (Part1).</p>
<p rev="sh21i1">For AES-DUKPT, this is a pointer to a string variable containing an AES
variable-length symmetric key-token, version X’ 05 AES DKYGENKY with Key-usage field 1, low-order
byte, most significant bit set to 1 indicating this key is allowed to be used as base derivation key
(BDK). The BDK is the one from which the operational keys are derived using the DUKPT algorithm
defined in ANSI x9.24-3 2017. </p><p>For key management STATIC, (Zone Encryption Key in the VDSP
specification), the key type must be either CIPHER or ENCIPHER. For production purposes, it is
recommended that the key have left and right halves that are not equal.</p><note>Data keys are not
supported.</note>
<p>If the token supplied was encrypted under the old master key, the token is returned encrypted
under the current master key.</p>
</pd>
</plentry>
<plentry>
<pt>output_key_identifier_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>output_key_identifier</parmname> parameter in bytes.
The value must be 64, because only fixed length DES tokens are supported as the key identifier.</pd>
</plentry>
<plentry>
<pt>output_key_identifier</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The identifier of the key that is used to decrypt the output card data. The <term>key
identifier</term> is an operational token or the key label of an operational token in key storage.
<p>The key type must be either CIPHER or ENCIPHER. For production purposes, it is recommended that
the key have left and right halves that are not equal.</p><note>Data keys are not supported.</note>
<p>If the token supplied was encrypted under the old master key, the token is returned encrypted
under the current master key.</p>
</pd>
</plentry>
<plentry>
<pt>derivation_data_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>derivation_data</parmname> parameter in bytes. <ph
rev="sh21i1">To specify the DES DUKPT method, set the value to 10 if the key management method DUKPT
is specified in the rule array. To specify the AES DUKPT method, set the value to 20 if the key
management method DUKPT is specified in the rule array. Otherwise, this value must be 0.</ph></pd>
</plentry>
<plentry>
<pt>derivation_data</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table><ph rev="sh21i1">When specifying the DES-DUKPT method, the
<parmname>derivation_data</parmname> parameter contains the 80 bit (10 byte) derivation data that is
used as input to the DUKPT derivation process.</ph> The derivation data contains the current key
serial number (CKSN), which is composed of the 59 bit initial key serial number concatenated with
the 21 bit value of the current encryption counter, which the device increments for each new
transaction. This field is in binary format. <p rev="sh21i1">When specifying the AES DUKPT method,
parameter <parmname>derivation_data</parmname> contains the 20 byte AES DUKPT Derivation Data
structure. See <xref href="wskc_aes_dukpt.dita#aes_dukpt/dukpt_ddata"/> for the layout of the AES
DUKPT derivation data. Bytes 4 and 5, algorithm indicator, must be set to 0x0000 (2-key TDEA) or
0x0001 (3-key TDEA). Bytes 2 and 3, key usage indicator, must be se t to 0x1000 (PIN
Encryption).</p>
</pd>
</plentry>
<plentry>
<pt>output_PAN_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the number of bytes of data in the <parmname>output_PAN</parmname> parameter. This
value is 0 or 16 on output.</pd>
</plentry>
<plentry>
<pt>output_PAN</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter returns the translated primary account number with which the PIN is
associated. The full account number, including check digit, is translated. The data for this
parameter is returned as TDES-encrypted data in binary format. The 16 byte output is left justified
in this field.</pd>
</plentry>
<plentry>
<pt>output_cardholder_name_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>output_cardholder_name</parmname> parameter in bytes.
This output value is either 0 or 16, 24, 32, or 40 bytes on output. The variable can be larger on
input. However, on output, this field is updated to indicate the actual number of bytes returned by
the card.</pd>
</plentry>
<plentry>
<pt>output_cardholder_name</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter returns the translated cardholder full name. The data for this parameter is
returned as TDES-encrypted data in binary format.</pd>
</plentry>
<plentry>
<pt>output_dtrack1_data_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>output_dtrack1_data</parmname> parameter in bytes. The
output value is either 0 or 16, 24, 32, 40, 48, 56, or 64 bytes. The value can be larger on input.
However, on output, this field is updated to indicate the actual number of bytes returned by the
service.</pd>
</plentry>
<plentry>
<pt>output_dtrack1_data</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter returns the translated discretionary track 1 data. This is the discretionary
data from track 1 of a magnetic stripe card. The data for this parameter is returned as
TDES-encrypted data in binary format.</pd>
</plentry>
<plentry>
<pt>output_dtrack2_data_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>output_dtrack2_data</parmname> parameter in bytes. The
output value is either 0, 8, or 16. The value can be larger on input. However, on output, this field
is updated to indicate the actual number of bytes returned by the service.</pd>
</plentry>
<plentry>
<pt>output_dtrack2_data</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter returns the translated discretionary track 2 data. This is the discretionary
data from track 2 of a magnetic stripe card. The data for this parameter is returned as
TDES-encrypted data in binary format.</pd>
</plentry>
<plentry>
<pt>DUKPT_PIN_key_identifier_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>DUKPT_PIN_key_identifier</parmname> parameter in
bytes. If the PINKEY rule-array keyword is specified, set this value to 64. Otherwise, set this
value to 0. On output, the variable is updated with the length of the data returned in the
<parmname>DUKPT_PIN_key_identifier</parmname> variable.</pd>
</plentry>
<plentry>
<pt>DUKPT_PIN_key_identifier</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>On input, this parameter must contain a DES OPINENC or IPINENC skeleton token. On output, it
contains the DES token with the derived DES OPINENC or IPINENC key.</pd>
</plentry>
<plentry>
<pt>reserved1_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>reserved1</parmname> parameter in bytes. The value
must be 0.</pd>
</plentry>
<plentry>
<pt>reserved1</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter is ignored.</pd>
</plentry>
<plentry>
<pt>reserved2_length</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>Specifies the length of the <parmname>reserved2</parmname> parameter in bytes. The value
must be 0.</pd>
</plentry>
<plentry>
<pt>reserved2</pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This parameter is ignored.</pd>
</plentry>
</parml>
</section>
</refbody>
</reference>
