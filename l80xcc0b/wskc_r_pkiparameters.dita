<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference
  PUBLIC "-//IBM//DTD DITA IBM Reference//EN" "ibm-reference.dtd">
<reference xml:lang="en-us" id="l0wskc02_pkiparameters">
<title>Parameters</title>
 <titlealts>
    <navtitle>Parameters</navtitle>
    <searchtitle><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca_long"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca"/>): Parameters for  <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclpki"/></searchtitle>
  </titlealts>
<shortdesc>The parameter definitions for <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclpki"/>.</shortdesc>
<prolog><metadata><keywords>

<indexterm><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmpki"/> (<keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclpki"/>)<indexterm>parameters</indexterm></indexterm>
<indexterm>rule_array_count parameter<indexterm><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmpki"/> verb</indexterm></indexterm>
<indexterm>rule_array parameter<indexterm><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmpki"/> verb</indexterm></indexterm>
<indexterm>control information<indexterm>for <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmpki"/></indexterm></indexterm>
<indexterm>key token<indexterm>Elliptic Curve Cryptography
(ECC)</indexterm></indexterm>
<indexterm>Elliptic Curve Cryptography (ECC)<indexterm>key
token</indexterm></indexterm>
<indexterm>ECC</indexterm>
<indexterm>RSA</indexterm>
<indexterm>IKEK-AES</indexterm>
<indexterm>IKEK-DES</indexterm>
<indexterm>source_key_identifier<indexterm><keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmpki"/> verb</indexterm></indexterm>
<indexterm>importer_key_identifier<indexterm><keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmpki"/> verb</indexterm></indexterm>
<indexterm>target_key_identifier<indexterm><keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmpki"/> verb</indexterm></indexterm>
</keywords>
</metadata>
</prolog>
<refbody>
<section><p>For the definitions of the <synph><var>return_code</var></synph>, <synph><var>reason_code</var></synph>, <synph><var>exit_data_length</var></synph>,
and <synph><var>exit_data</var></synph> parameters, see <xref href="wskc_c_vparms.dita#l0wskc02_vparms"/>.</p></section><section>
<parml>
<plentry><pt>rule_array_count </pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>A pointer to an integer variable containing the number of elements in the
<parmname>rule_array</parmname> variable. This value may be 0, 1, or 2.</pd></plentry>
<plentry><pt>rule_array </pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String array</entry>
</row>
</tbody>
</tgroup>
</table>The <parmname>rule_array</parmname> parameter is a pointer to a string variable containing a
keyword. The keyword is 8 bytes in length and must be left-aligned and padded on the right with
space characters. The <parmname>rule_array</parmname> keywords are described in <xref
href="#l0wskc02_pkiparameters/l0wskc02_keypkimp"/>. <table id="l0wskc02_keypkimp" pgwide="1"
frame="all">
<title>Keywords for <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmpki"/> control
information</title>
<desc>
<p outputclass="summary">Keywords for <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmpki"/> control information</p>
</desc>
<tgroup cols="2">
<colspec colname="col1" colwidth="2*"/>
<colspec colname="col2" colwidth="12*"/>
<thead>
<row>
<entry>Keyword</entry>
<entry>Description</entry>
</row>
</thead>
<tbody>
<row>
<entry namest="col1" nameend="col2"><b><i>Token type</i></b> (One, optional)</entry>
</row>
<row>
<entry><synph><kwd>ECC</kwd></synph></entry>
<entry>Specifies that the key being imported is an ECC key.</entry>
</row>
<row>
<entry><synph><kwd>RSA</kwd></synph></entry>
<entry>Specifies that the key being imported is an RSA key or a trusted
block. This is the default.</entry>
</row>
<row rev="sh20i2">
<entry><synph><kwd>QSA</kwd></synph></entry>
<entry>Specifies that the key token contains a QSA key. Only clear keys are supported.</entry>
</row>
<row>
<entry namest="col1" nameend="col2"><b><i>Transport key type</i></b> (optional)</entry>
</row>
<row>
<entry><synph><kwd>IKEK-AES</kwd></synph></entry>
<entry>The <parmname>importer_key_identifier</parmname> is an AES
key.</entry>
</row>
<row>
<entry><synph><kwd>IKEK-DES</kwd></synph></entry>
<entry>The <parmname>importer_key_identifier</parmname> is a DES key. This
is the default.</entry>
</row>
</tbody>
</tgroup>
</table></pd></plentry>
<plentry><pt>source_key_identifier_length </pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>The length of the <parmname>source_key_identifier</parmname> parameter. 
<ph rev="sh20i2">The maximum size is 6500 bytes.</ph>
</pd>
</plentry>
<plentry><pt>source_key_identifier </pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>The external key token of an ECC, RSA, or QSA private key or active external trusted block
to be imported. The ECC, RSA, and QSA key token must contain both public-key and private key
information. The private key can be in cleartext or it can be enciphered.</pd></plentry>
<plentry><pt>importer_key_identifier </pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>A variable-length field containing an AES or DES key identifier used to wrap the imported
key. For RSA keys and trusted blocks, this must be a DES limited authority transport key
(<synph><kwd>IMP-PKA</kwd></synph>). For ECC keys, this must be an AES transport key. For QSA keys,
this must be a null token. <p>This parameter contains one of the following: </p><ul>
<li>64-byte label of a key storage record that contains the transport key.</li>
<li>64-byte DES internal key token containing the transport key.</li>
<li>A variable-length AES internal key token containing the transport key.</li>
</ul><p>This parameter is ignored for clear tokens.</p></pd></plentry>
<plentry><pt>target_key_identifier_length </pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">Integer</entry>
</row>
</tbody>
</tgroup>
</table>The length of the <parmname>target_key_identifier</parmname> parameter in bytes. The maximum
size is 6500 bytes. <p>On input, this is the size of the buffer to receive the output key token. If
the <parmname>target_key_identifier</parmname> is the label of an existing record in the PKA key
storage, the value must be 64.</p>
<p>On output, and if the size is of sufficient length, the parameter is updated with the actual
length of the returned key token.</p>
<note>QSA (CRYSTALS-Dilithium) keys cannot be stored in the PKA key storage.</note>
</pd></plentry>
<plentry><pt>target_key_identifier </pt>
<pd><table colsep="0" frame="none" outputclass="presentation" pgwide="2" rowsep="0">
<tgroup cols="2">
<colspec colname="col1" colwidth="1*"/>
<colspec colname="col2" colwidth="5*"/>
<tbody>
<row>
<entry colname="col1"><b>Direction:</b></entry>
<entry colname="col2">Input/Output</entry>
</row>
<row>
<entry colname="col1"><b>Type:</b></entry>
<entry colname="col2">String</entry>
</row>
</tbody>
</tgroup>
</table>This field contains the internal token or label of the imported PKA private key or a trusted
block. If a label is specified on input, a PKA key storage record with this label must exist. The
PKA key storage record with this label will be overwritten with the imported key unless the existing
record is a retained key. If the record is a retained key, the import will fail. A retained key
record cannot be overwritten. If no label is specified on input, this field is ignored and should be
set to binary zeros. <p rev="sh20i1">When the <synph><var>importer_key_identifier</var></synph> is
compliant-tagged, the key is imported as a compliant-tagged key token.</p>
<note rev="sh20i2">QSA (CRYSTALS-Dilithium) keys cannot be stored in the PKA key storage.</note>
</pd></plentry>
</parml></section>
</refbody></reference>
