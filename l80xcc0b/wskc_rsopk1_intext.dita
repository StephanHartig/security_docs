<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE topic PUBLIC "-//IBM//DTD DITA IBM Topic//EN"
 "ibm-topic.dtd">
<topic id="rsopk1_intext" xml:lang="en-us">
<title>RSA private key, 4096-bit Modulus-Exponent format with AES encrypted OPK section</title>
<titlealts>
<navtitle>RSA private key, 4096-bit Modulus-Exponent format with AES encrypted OPK
section</navtitle>
<searchtitle><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca_long"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca"/>): RSA private key, 4096-bit
Modulus-Exponent format with AES encrypted OPK section</searchtitle>
</titlealts>
<shortdesc>View the RSA private key token, 4096-bit Modulus-Exponent format with AES encrypted OPK section in external and internal format
(X'30').</shortdesc>
<prolog>
<metadata>
<keywords>
<indexterm>RSA private key<indexterm>4096-bit Modulus-Exponent</indexterm><indexterm>AES encrypted
OPK section</indexterm></indexterm>
</keywords>
</metadata>
</prolog>
<body>
<table frame="all" pgwide="1" scale="90">
<title>RSA private key, 4096-bit Modulus-Exponent format with AES encrypted OPK section (X'30')
external and internal form</title>
<desc>
<p outputclass="summary">RSA private key, 4096-bit Modulus-Exponent format with AES encrypted OPK
section (X'30') external and internal form</p>
</desc>
<tgroup cols="3">
<colspec colname="col1" colwidth="15*"/>
<colspec colname="col2" colwidth="15*"/>
<colspec colname="col3" colwidth="150*"/>
<thead>
<row>
<entry>Offset (bytes)</entry>
<entry>Length (bytes)</entry>
<entry>Description</entry>
</row>
</thead>
<tbody>
<row>
<entry>000</entry>
<entry>001</entry>
<entry>Section identifier: <dl>
<dlentry>
<dt><ph>X'30'</ph></dt>
<dd>RSA private key, 4096-bit Modulus-Exponent format (RSA-AESM) with AES encrypted OPK.</dd>
</dlentry>
</dl>
</entry>
</row>
<row>
<entry>001</entry>
<entry>001</entry>
<entry>Section version number (<ph>X'00'</ph>).</entry>
</row>
<row>
<entry>002</entry>
<entry>002</entry>
<entry>Section length: 122 + nnn + ppp</entry>
</row>
<row>
<entry>004</entry>
<entry>002</entry>
<entry rev="sh20i1">Length of Associated Data section: 46</entry>
</row>
<row>
<entry>006</entry>
<entry>002</entry>
<entry>Length of payload data: ppp</entry>
</row>
<row>
<entry>008</entry>
<entry>002</entry>
<entry>Reserved, binary zero. </entry>
</row>
<row>
<entry/>
<entry/>
<entry><b>Start of Associated Data</b></entry>
</row>
<row>
<entry>010</entry>
<entry>001</entry>
<entry>Associated Data Version: <dl>
<dlentry>
<dt>X'02'</dt>
<dd>Version 2</dd>
</dlentry>
<dlentry rev="sh20i1">
<dt>X'04'</dt>
<dd>Version 4</dd>
</dlentry>
</dl></entry>
</row>
<row>
<entry>011</entry>
<entry>001</entry>
<entry>Key format and security flag: <p>External format:</p>
<dl>
<dlentry>
<dt><ph>X'00'</ph></dt>
<dd>Unencrypted ME RSA private-key subsection identifier </dd>
</dlentry>
<dlentry>
<dt><ph>X'82'</ph></dt>
<dd>Encrypted ME RSA private-key subsection identifier</dd>
</dlentry>
</dl><p>Internal format:</p>
<dl>
<dlentry>
<dt>X'02'</dt>
<dd>Encrypted ME RSA private-key subsection identifier</dd>
</dlentry>
</dl>
<ph rev="sh20i1">All other values are reserved and undefined.</ph></entry>
</row>
<row>
<entry>012</entry>
<entry>001</entry>
<entry>Key source flag: <p>External key-token: Reserved, binary zero.</p>
<p>Internal key-token:</p>
<dl>
<dlentry>
<dt>X'21'</dt>
<dd>External private key was specified in the clear.</dd>
</dlentry>
<dlentry>
<dt>X'22'</dt>
<dd>External private key was encrypted.</dd>
</dlentry>
<dlentry>
<dt>X'23'</dt>
<dd>Private key was generated using regeneration data</dd>
</dlentry>
<dlentry>
<dt>X'24'</dt>
<dd>Private key was randomly generated</dd>
</dlentry>
</dl>
<p>All other values are reserved and undefined.</p>
</entry>
</row>

<row rev="sh20i1">
<entry>013</entry>
<entry>001</entry>
<entry>
When associated data section version is X'02': Reserved, binary zero.
<p>When associated data section version is X'04': Compliance and export control byte.</p>
<dl>
<dlhead>
<dthd>Bit</dthd><ddhd>Meaning</ddhd></dlhead>
<dlentry>
<dt>B'1xxx xxxx'</dt>
<dd>Compliant-tagged key.</dd>
</dlentry>
<dlentry>
<dt>B'0xxx xxxx'</dt>
<dd>Non-compliant-tagged key.</dd>
</dlentry>
<dlentry>
<dt>B'xxxx xx1x'</dt>
<dd>Private key translation is allowed (XLATE-OK).</dd>
</dlentry>
<dlentry>
<dt>B'xxxx xx0x'</dt>
<dd>Private key translation is not allowed (NO-XLATE).</dd>
</dlentry>
</dl>All other bits are reserved and must be zero.</entry>
</row>

<row>
<entry>014</entry>
<entry>001</entry>
<entry>Hash type: <dl>
<dlentry>
<dt>X'00'</dt>
<dd>Clear key</dd>
</dlentry>
<dlentry>
<dt>X'02'</dt>
<dd>SHA-256</dd>
</dlentry>
</dl></entry>
</row>
<row>
<entry>015</entry>
<entry>032</entry>
<entry>When associated data section version is X'02': SHA-256 hash of all optional
sections that follow the public key section, if any. Otherwise, 32 bytes of binary
zero.
<p>When associated data section version is X'04': Hash value of:</p>
<ol>
<li>The public key section (section identifier X'04')</li>
<li>All optional sections that follow the public key section, if any.</li>
</ol>
If there are no optional sections, the hash covers only the public keys section.</entry>
</row>

<row>
<entry>047</entry>
<entry>001</entry>
<entry>Reserved, binary zero.</entry>
</row>

<row>
<entry>048</entry>
<entry>002</entry>
<entry>When associated data section version is X'02': Reserved, binary zero. <p>When associated data
section version is X'04':</p>
<p>Usage bytes:</p>
<ul>
<li>Offset 48: <dl>
<dlhead>
<dthd>Bit</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'1xxx xxxx'</dt>
<dd>Digital Signature usage is allowed (U-DIGSIG). Services: CSNDDSG, CSNDDSV, CSNDT34B,
CSNDT34D.</dd>
</dlentry>
<dlentry>
<dt>B'x1xx xxxx'</dt>
<dd>Non-Repudiation usage is allowed (U-NONRPD). Services: CSNDDSG, CSNDDSV.</dd>
</dlentry>
<dlentry>
<dt> B'xx1x xxxx' </dt>
<dd>Key Encipherment usage is allowed (U-KEYENC). Services: CSNDSYG, CSNDSYX, CSNDSYI, CSNDSYI2,
CSNDT34R, CSNDPKE, CSNDPKD.</dd>
</dlentry>
<dlentry>
<dt>B'xxx1 xxxx'</dt>
<dd>Data Encipherment usage is allowed (U-DATENC). Services: CSNDPKE, CSNDPKD.</dd>
</dlentry>
<dlentry>
<dt>B'xxxx 1xxx'</dt>
<dd>Key agreement usage is allowed (U-KEYAGR).</dd>
</dlentry>
<dlentry>
<dt>B'xxxx x1xx'</dt>
<dd>keyCertSign usage is allowed (U-KCRTSN). Services: CSNDDSG, CSNDDSV.</dd>
</dlentry>
<dlentry>
<dt>B'xxxx xx1x'</dt>
<dd>Certificate Revocation List Sign usage is allowed (U-CRLSN). Services: CSNDDSG, CSNDDSV.</dd>
</dlentry>
<dlentry>
<dt>B'xxxx xxx1'</dt>
<dd>Only encipher operations are allowed during key agreement (U-ENCONL).</dd>
</dlentry>
</dl>
</li>
<li>Offset 49: <dl>
<dlhead>
<dthd>Bit</dthd>
<ddhd>Meaning</ddhd>
</dlhead>
<dlentry>
<dt>B'1xxx xxxx'</dt>
<dd>Only decipher operations are allowed during key agreement (U-DECONL).</dd>
</dlentry>
</dl>
</li>
</ul>
</entry>
</row>
<row rev="sh21i3">
<entry>048</entry>
<entry>002</entry>
<entry ><b>Continued description for Offset 048:</b>
<p><b>Comp-tag single-usage restrictions and bits that are allowed to be ON 
together:</b> The left-column of the table shows the exclusive key types that are allowed with
respect to CCA services and the usage bit that corresponds to each type.</p>
<note>
<ol>
<li>For some services, CCA cannot distinguish subsets of those service types operationally. The bits that
correspond to the function subsets are allowed to be on at the same time as the key type bit, as
shown in the table.</li>
<li>There are cases in RFC 5280 where one bit depends on another bit. Bits that
control unique CCA services are not allowed to be ON at the same time.</li>
<li>For keyAgreement, the
subset bit or dependent bit is not a stand-in for the primary key type bit. If encipherOnly is
enabled, then keyAgreement must also be enabled.</li>
<li>For digitalSignature the case is different, all
of the bits that map to the CCA SIGN-ONLY usage are independent. For example, a digitalSignature
private key is usable in CSNDDSG. If the key token also has the nonrepudiation bit set, the key token
will still be acceptable for use in CSNDDSG and as a Comp-tag token. Also, if the nonrepudiation bit
is set and the digitalSignature bit is not set, then the key token is usable with CSNDDSG.</li>
</ol>
</note>
<codeblock rev="sh21i3" scale="80">
<b>Single Use Key</b>                       <b>bits allowed to be</b>
<b>allowed bits</b>                         <b>enabled at the same time</b>

(Any of the 4 bits at right)         (0 - 0x80), digitalSignature       
== CCA SIGN-ONLY                     (1 - 0x40), nonrepudiation, 
                                     subset of CCA SIGN-ONLY 
                                     (5 - 0x04), keyCertSign, 
                                     subset of CCA SIGN-ONLY
                                     (6 - 0x02), cRLSign, 
                                     subset of CCA SIGN-ONLY

(2 - 0x20), keyEncipherment          NONE
== CCA KM-ONLY  

(3 - 0x10), dataEncipherment         NONE
== CCA services CSNDPKE, CNSDPKD  

(4 - 0x08), keyAgreement             (7 - 0x01), encipherOnly, cannot be 
== no current CCA service for RSA    ON at the same time as decipherOnly  
                                     (8 - 0x80), decipherOnly, cannot be 
                                     ON at the same time as encipherOnly 
</codeblock>
</entry>
</row>
<row>
<entry>050</entry>
<entry>001</entry>
<entry><p>When associated data section version is X'02': Key-usage and translation control flag:</p>
<p>Key-usage flag:</p>
 <dl>
<dlentry>
<dt>B'11xx xxxx'</dt>
<dd>Only key unwrapping (KM-ONLY)</dd>
</dlentry>
<dlentry>
<dt>B'10xx xxxx'</dt>
<dd>Both signature generation and key unwrapping (KEY-MGMT)</dd>
</dlentry>
<dlentry>
<dt>B'01xx xxxx'</dt>
<dd>Undefined</dd>
</dlentry>
<dlentry>
<dt>B'00xx xxxx'</dt>
<dd>Only signature generation (SIG-ONLY)</dd>
</dlentry>
</dl>
<p>All other values are undefined.</p>
<p>Translation control:</p>
<dl>
<dlentry>
<dt>B'xxxx xx1x'</dt>
<dd>Private key translation is allowed (XLATE-OK)</dd>
</dlentry>
<dlentry>
<dt>B'xxxx xx0x'</dt>
<dd>Private key translation is not allowed (NO-XLATE)</dd>
</dlentry>
</dl>
<p>All other bits are reserved and must be zero.</p>
<p>When associated data section version is X'04': Reserved, binary zero.</p></entry>
</row>
<row>
<entry>051</entry>
<entry>001</entry>
<entry>Format restriction for digital-signature hash-formatting method:
<dl compact="yes"><dlhead><dthd>Value</dthd><ddhd>Meaning</ddhd></dlhead>
<dlentry>
<dt>B'0000 0000'</dt>
<dd>No format restriction</dd>
</dlentry>
<dlentry>
<dt>B'0000 0001'</dt>
<dd>ISO-9796 only</dd>
</dlentry>
<dlentry>
<dt>B'0000 0010'</dt>
<dd>PKCS-1.0 only</dd>
</dlentry>
<dlentry>
<dt>B'0000 0011'</dt>
<dd>PKCS-1.1 only</dd>
</dlentry>
<dlentry>
<dt>B'0000 0100'</dt>
<dd>PKCS-PSS only</dd>
</dlentry>
<dlentry>
<dt>B'0000 0101'</dt>
<dd>X9.31 only</dd>
</dlentry>
<dlentry>
<dt>B'0000 0110'</dt>
<dd>ZERO-PAD only</dd>
</dlentry>
</dl><p>All other values are reserved and undefined.</p>
</entry>
</row>
<row>
<entry>052</entry>
<entry>002</entry>
<entry>Length of modulus: nnn bytes</entry>
</row>
<row>
<entry>054</entry>
<entry>002</entry>
<entry>Length of private exponent: ddd bytes</entry>
</row>
<row>
<entry/>
<entry/>
<entry><b>End of Associated Data</b></entry>
</row>
<row rev="sh20i1">
<entry>056</entry>
<entry>048</entry>
<entry>Object Protection Key (OPK) Data: The OPK consists of a 16 byte confounder and
a 256-bit AES key. 
<p>External token: The OPK data is wrapped with an AES key-encrypting key using
the AESKW (ANS X9.102) algorithm.</p>
<p>Internal token: The OPK data is wrapped with an ECC master key using the
AESKW algorithm.</p></entry>
</row>
<row>
<entry>104</entry>
<entry>016</entry>
<entry>Key verification pattern <p>External key-token:</p><dl>
<dlentry>
<dt>For an encrypted private key</dt>
<dd>Key-encrypting key verification pattern (KVP)</dd>
</dlentry>
<dlentry>
<dt>For a clear private key</dt>
<dd>Binary zero</dd>
</dlentry>
<dlentry>
<dt>For a skeleton</dt>
<dd>Binary zero</dd>
</dlentry>
</dl>
<p>Internal key-token:</p>
<dl>
<dlentry>
<dt>For an encrypted private key</dt>
<dd><ul rev="sh20i1">
<li>When a non-compliant-tagged token (bit 0 at offset 13 is not set), the ECC
master-key verification pattern (MKVP).</li>
<li>When a compliant-tagged token (bit 0 at offset 13 is set), 5 bytes of the ECC
MKVP followed by 3 bytes of internal compliance information.</li>
</ul></dd>
</dlentry>
<dlentry>
<dt>For a skeleton</dt>
<dd>Binary zero</dd>
</dlentry>
</dl>
</entry>
</row>
<row>
<entry>120</entry>
<entry>002</entry>
<entry>Reserved, binary zeros.</entry>
</row>
<row>
<entry>122</entry>
<entry>nnn</entry>
<entry rev="sh20i1">Modulus n. n=pq where p and q are prime and 2<sup>512</sup>&lt;n&lt;2<sup>4096</sup>.</entry>
</row>
<row>
<entry>122+nnn</entry>
<entry>ppp</entry>
<entry>Payload starts here and includes:  <ul>
<li>When this section is unencrypted: Clear private exponent d, length ppp.</li>
<li>When this section is encrypted: Private exponent d in the payload wrapped by the OPK using the
AESKW algorithm.</li>
</ul></entry>
</row>
</tbody>
</tgroup>
</table>
</body>
</topic>
<?Pub *0000006313?>
