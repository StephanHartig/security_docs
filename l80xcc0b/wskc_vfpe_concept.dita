<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE concept PUBLIC "-//IBM//DTD DITA IBM Concept//EN"
 "ibm-concept.dtd">
<?Pub Sty _display FontColor="red"?>
<concept id="vfpe_concept" rev="sh16i1" xml:lang="en-us">
<title>Format preserving encryption</title>
<titlealts>
<navtitle>Format preserving encryption</navtitle>
<?Pub Caret -1?>
<searchtitle><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca_long"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca"/>): Format preserving encryption</searchtitle>
</titlealts>
<shortdesc>Format preserving encryption (FPE) is a method of encryption where the resulting
ciphertext has the same form as the input cleartext. The form of the text can vary according to the
usage and the application. The contained information provides background information which is
helpful for using the <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vfpe"/> (VFPE)
services provided by <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca"/>. The <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vfpe"/>
<ph rev="sh21i1">is a counter mode stream cipher and uses an alphabet parameter.</ph> An alphabet
assigns a sequential number set for all potential characters for a given field type that is used in
the conversion of payment card data prior to encryption.</shortdesc>
<prolog>
<metadata>
<keywords>
<indexterm><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vfpe"
/><indexterm>VFPE</indexterm></indexterm>
<indexterm>Format Preserving Encryption</indexterm>
<indexterm>VFPE<indexterm><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vfpe"
/></indexterm></indexterm>
<indexterm>Visa payment card data formats<indexterm>PAN</indexterm><indexterm>Cardholder
Name</indexterm><indexterm>Track 1 Discretionary Data</indexterm><indexterm>Track 2 Discretionary
Data</indexterm></indexterm>
<indexterm>PAN</indexterm>
<indexterm>Cardholder Name</indexterm>
<indexterm>Track 1 Discretionary Data</indexterm>
<indexterm>Track 2 Discretionary Data</indexterm>
</keywords>
</metadata>
</prolog>
<conbody>
<p rev="sh21i1">Meeting the needs of FPE is not achievable with traditional block encryption algorithms that work on a data
block of given size (typically 64 or 128 bits) and treat input and output as binary strings with no alphabet
constraint.</p>
<p rev="sh21i1">FPE was developed to meet these needs and is of particular importance for financial payment systems,
data base encryption, and other use cases. The core FPE encryption engines themselves do not
discriminate between different alphabets with the same amount of characters and rely on an application
level alphabet translation that maps each of the <b>n</b> alphabet characters present in a given alphabet to the
numbers <b>{0, 1, â€¦ , n-1}</b>.</p>
<p>One example for format preserving encryption is a 16 digit credit card number. After using FPE to
encrypt a credit card number, the resulting ciphertext is another 16 digit number. In this example
of the credit card number, the output ciphertext is limited to numeric digits only.</p> 
<p rev="sh21i1">The CSNBFPEE, CSNBFPED, CSNBFPET, and CSNBPTRE callable services implement the
<keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vfpe"/> algorithm, which is a counter
mode stream cipher.</p>
<p>The FPE services require some knowledge of the input cleartext character set in order to create
the appropriate output ciphertext. The <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfpee"/>, <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfped"/>, <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfpet"/>, and <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclptre"/> callable services use the tables in
the following subsections to determine valid character sets for the cleartext input parameters.</p>

<p>VFPE applies to these verbs:</p>
<ul>
<li><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmfped"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfped"/>)</li>
<li><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmfpee"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfpee"/>)</li>
<li><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmfpet"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfpet"/>)</li>
<li><keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmptre"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclptre"/>)</li>
</ul>
<p>These <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/cca"/> verbs use the tables in
the following subsections to determine valid character sets for the cleartext input parameters.
These services  convert payment card data as required to or from VFPE alphabet numbers as determined
by <parmname>rule_array</parmname> keyword. The alphabet tables below are meant to provide a reference for the valid set
of characters for each of the four Visa payment card data formats (namely, PAN, Cardholder Name,
Track 1 Discretionary Data, and Track 2 Discretionary Data). </p>
<p>VFPE payment card data can be in any one of these formats:</p>
<ul>
<li>For Track 2, a special modified 5-bit ASCII format, which allows parity checking of the digits,
as specified in ISO 7811</li>
<li>For Track 1, a special modified 7-bit ASCII format, which allows parity checking of the digits,
as specified in ISO 7811-2 and ISO 7813</li>
<li>4-bit Binary Coded Decimal (BCD)</li>
<li>7-bit American Standard Code for Information Interchange (ASCII)</li>
<li>8-bit Extended Binary Coded Decimal Interchange Code (EBCDIC)</li>
</ul>
<p>The conversion of payment card data to a VFPE alphabet prior to encryption serves to standardize
the data. The converted encryption result is presented to the terminal application for constructing
payment transaction data. When the converted encryption result is decrypted, the VFPE alphabet data
can be converted back to any desired format.</p>
<p>When VFPE is applied to a transaction, it must always be applied to all occurrences of the
following fields (when present), and in the following order:</p>
<ol>
<li>Primary Account Number (PAN) </li>
<li>Cardholder Name</li>
<li>Track 1 Discretionary Data</li>
<li>Track 2 Discretionary Data</li>
</ol>
<p>Any missing data fields will be skipped.</p>
<p>Each character in the set of characters for a given field type is assigned a unique VFPE alphabet
number. VFPE requires translation of each payment card data character to its assigned VFPE alphabet
number prior to encryption. Refer to <xref href="#vfpe_concept/vfpe_alphabet_field_type"
format="dita"/>.</p>
<table pgwide="1" id="vfpe_alphabet_field_type">
<title>VFPE alphabet by field type</title>
<desc><p outputclass="summary">Table describing the VFPE alphabet by field type in three columns</p></desc>
<tgroup cols="3">
<colspec colname="col1" colwidth="2*"/>
<colspec colname="col2" colwidth="3*"/>
<colspec colname="col3" colwidth="3*"/>
<thead>
<row>
<entry>Field type</entry>
<entry>VFPE alphabet used</entry>
<entry>Description</entry>
</row>
</thead>
<tbody>
<row>
<entry>Primary Account Number (PAN)</entry>
<entry><ul>
<li>For releases starting with 5.0: BASE-10 alphabet. <p>Refer to <xref
href="#vfpe_concept/vfpe_base_10_alphabet" format="dita"/>.</p>
</li>
</ul>
</entry>
<entry>PAN data must be converted into the VFPE BASE-10 alphabet prior to encryption. <p>Data is
obtained from Track 1, Track 2, chip medium-scale integration (MSI), or chip account
number.</p></entry>
</row>
<row>
<entry>Cardholder Name</entry>
<entry><ul>
<li>For releases starting with 5.0: Track 1 Cardholder Name alphabet. <p>Refer to the third column
of <xref href="#vfpe_concept/vfpe_track1_discrdata_cardholder" format="dita"/>.</p>
</li>
</ul>
</entry>
<entry>Cardholder Name data must be converted into the VFPE Track 1 Cardholder Name alphabet
prior to encryption. <p>Data is obtained from Track 1 or chip data.</p></entry>
</row>
<row>
<entry>Track 1 Discretionary Data</entry>
<entry><ul>
<li>For releases starting with 5.0: Track 1 Discretionary Data alphabet. <p>Refer to the second
column of <xref href="#vfpe_concept/vfpe_track1_discrdata_cardholder" format="dita"/>. </p>
</li>
</ul>
<note>This table has all of the same characters as the VFPE Track 1 Cardholder Name
alphabet plus two reserved name field characters, namely a period "." and a slash "/".
</note>
</entry>
<entry>Track 1 Discretionary Data must be converted into the VFPE Track 1 Discretionary alphabet
prior to encryption. <p>Data is obtained from magnetic stripe or chip data.</p></entry>
</row>
<row>
<entry>Track 2 Discretionary Data</entry>
<entry><ul>
<li>For release 5.0: BASE-16 alphabet. <p>Refer to <xref href="#vfpe_concept/base_16_alphabet"
format="dita"/>.</p></li>
<li>For release 5.2: BASE-10 alphabet. <p>Refer to <xref href="#vfpe_concept/vfpe_base_10_alphabet"
format="dita"/>. </p></li>
</ul>
</entry>
<entry>Track 2 Discretionary Data must be converted into the VFPE BASE-10 alphabet prior to
encryption. <p>Data is obtained from the magnetic stripe or chip data.</p></entry>
</row>
<row>
<entry namest="col1" nameend="col3">
<note>
<ol>
<li>Characters that are not found in the alphabet table should be skipped and not encrypted.</li>
<li>Reserved characters that are not in the table are intentionally missing. Missing reserved
characters can be used for hardware control, start sentinel, field separate, or end sentinel.</li>
</ol>
</note>
</entry>
</row>
</tbody>
</tgroup>
</table>
<section><title>VFPE BASE-10 alphabet</title>
<p>The VFPE BASE-10 alphabet is used for converting data when the character set only consists of
numbers zero through nine (0 - 9). VFPE requires translation (conversion) of the following data to
the VFPE alphabet number in <xref href="#vfpe_concept/vfpe_base_10_alphabet" format="dita"/>:</p>
<ul>
<li>PAN data obtained from payment card Track 1, Track 2, chip MSI, or chip account number</li>
<li>Track 2 Discretionary Data obtained from the magnetic strip or chip data.</li>
</ul>
<p>Any of the data types shown in the table are supported. After the formatted encrypted data is decrypted,
it can be translated to the same or a different data type than the original coding.</p>
<table frame="all" id="vfpe_base_10_alphabet">
<title>VFPE BASE-10 alphabet for PAN data and Track 2 Discretionary Data</title>
<desc><p outputclass="summary">Table describing the VFPE BASE-10 alphabet for PAN data and Track 2 Discretionary
Data in seven columns</p>
</desc>
<tgroup cols="7" align="center">
<colspec colname="col1" colwidth="7*"/>
<colspec colname="col2" colwidth="7*"/>
<colspec colname="col3" colwidth="8*"/>
<colspec colname="col4" colwidth="10*"/>
<colspec colname="col5" colwidth="7*"/>
<colspec colname="col6" colwidth="8*"/>
<colspec colname="col7" colwidth="7*"/>
<thead>
<row>
<entry morerows="1">Character</entry>
<entry morerows="1">VFPE alphabet number</entry>
<entry morerows="1">ISO 7811 modified 5-bit ASCII</entry>
<entry morerows="1">ISO 7811-2 and ISO 7813 Modified 7-bit ASCII</entry>
<entry namest="col5" nameend="col7">Normal data type encoding</entry>
</row>
<row>
<entry>4-bit binary coded decimal (BCD)</entry>
<entry>7-bit ASCII</entry>
<entry>8-bit EBCDIC</entry>
</row>
</thead>
<tbody>
<row>
<entry>0</entry>
<entry>0</entry>
<entry>10000</entry>
<entry>0010000</entry>
<entry>0000</entry>
<entry>0110000</entry>
<entry>11110000</entry>
</row>
<row>
<entry>1</entry>
<entry>1</entry>
<entry>00001</entry>
<entry>1010001</entry>
<entry>0001</entry>
<entry>0110001</entry>
<entry>11110001</entry>
</row>
<row>
<entry>2</entry>
<entry>2</entry>
<entry>00010</entry>
<entry>1010010</entry>
<entry>0010</entry>
<entry>0110010</entry>
<entry>11110010</entry>
</row>
<row>
<entry>3</entry>
<entry>3</entry>
<entry>10011</entry>
<entry>0010011</entry>
<entry>0011</entry>
<entry>0110011</entry>
<entry>11110011</entry>
</row>
<row>
<entry>4</entry>
<entry>4</entry>
<entry>00100</entry>
<entry>1010100</entry>
<entry>0100</entry>
<entry>0110100</entry>
<entry>11110100</entry>
</row>
<row>
<entry>5</entry>
<entry>5</entry>
<entry>10101</entry>
<entry>0010101</entry>
<entry>0101</entry>
<entry>0110101</entry>
<entry>11110101</entry>
</row>
<row>
<entry>6</entry>
<entry>6</entry>
<entry>10110</entry>
<entry>0010110</entry>
<entry>0110</entry>
<entry>0110110</entry>
<entry>11110110</entry>
</row>
<row>
<entry>7</entry>
<entry>7</entry>
<entry>00111</entry>
<entry>1010111</entry>
<entry>0111</entry>
<entry>0110111</entry>
<entry>11110111</entry>
</row>
<row>
<entry>8</entry>
<entry>8</entry>
<entry>01000</entry>
<entry>1011000</entry>
<entry>1000</entry>
<entry>0111000</entry>
<entry>11111000</entry>
</row>
<row>
<entry>9</entry>
<entry>9</entry>
<entry>11001</entry>
<entry>0011001</entry>
<entry>1001</entry>
<entry>0111001</entry>
<entry>11111001</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section>
<title>VFPE Track 1 Discretionary Data and Cardholder Name alphabets</title>
<p>There are two VFPE alphabets for Track 1 data. One is for VFPE Track 1 Discretionary Data, and the
other for VFPE Track 1 Cardholder Name data:</p>
<ul>
<li>The VFPE Track 1 Discretionary Data alphabet is used for converting the Track 1 Discretionary
Data obtained from payment card magnetic stripe or chip data. This alphabet includes two reserved
name field characters, namely a period "." and a slash "/", that the VFPE Track 1 Cardholder Name
alphabet does not have. If a period (".") or a slash ("/") character is encountered in Track 1
Discretionary Data, it should be converted and encrypted.</li>
<li>The VFPE Track 1 Cardholder Name alphabet is used for converting the cardholder name data
obtained from payment card Track 1 or chip data. If a period (".") or a slash ("/") character is
encountered in Cardholder Name data, it should be skipped and not encrypted.</li>
</ul>
<p>Refer to <xref href="#vfpe_concept/vfpe_track1_discrdata_cardholder" format="dita"/>. Any of the
data types shown in the table are supported. After the formatted and encrypted data is decrypted, it
can be translated to the same or a different data type than the original coding.</p>
<table pgwide="0" id="vfpe_track1_discrdata_cardholder">
<title>VFPE Track 1 Discretionary Data and Cardholder Name alphabets</title>
<desc><p outputclass="summary">Table describing the VFPE Track 1 Discretionary Data and
Cardholder Name alphabets in six columns</p>
</desc>
<tgroup cols="6" align="center">
<colspec colname="col1" colwidth="7*"/>
<colspec colname="col2" colwidth="8*"/>
<colspec colname="col3" colwidth="8*"/>
<colspec colname="col4" colwidth="8*"/>
<colspec colname="col5" colwidth="8*"/>
<colspec colname="col6" colwidth="8*"/>
<thead>
<row>
<entry>Character</entry>
<entry>VFPE Track 1 Discretionary Data alphabet number</entry>
<entry>VFPE Track 1 Cardholder Name alphabet number</entry>
<entry>ISO 7811-2 and ISO 7813 Modified 7-bit ASCII data type</entry>
<entry>7-bit ASCII normal data type encoding</entry>
<entry>8-bit EBCDIC normal data type encoding</entry>
</row>
</thead>
<tbody>
<row>
<entry>space</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1000000</entry>
<entry>0100000</entry>
<entry>01000000</entry>
</row>
<row>
<entry>#</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1000011</entry>
<entry>0100011</entry>
<entry>01111011</entry>
</row>
<row>
<entry>$</entry>
<entry>2</entry>
<entry>2</entry>
<entry>0000100</entry>
<entry>0100100</entry>
<entry>01011011</entry>
</row>
<row>
<entry>(</entry>
<entry>3</entry>
<entry>3</entry>
<entry>0001000</entry>
<entry>0101000</entry>
<entry>01001101</entry>
</row>
<row>
<entry>)</entry>
<entry>4</entry>
<entry>4</entry>
<entry>1001001</entry>
<entry>0101001</entry>
<entry>01011101</entry>
</row>
<row>
<entry>-</entry>
<entry>5</entry>
<entry>5</entry>
<entry>0001101</entry>
<entry>0101101</entry>
<entry>01100000</entry>
</row>
<row>
<entry>.</entry>
<entry>6</entry>
<entry>Skip</entry>
<entry>0001110</entry>
<entry>0101110</entry>
<entry>01001011</entry>
</row>
<row>
<entry>/</entry>
<entry>7</entry>
<entry>Skip</entry>
<entry>1001111</entry>
<entry>0101111</entry>
<entry>01100001</entry>
</row>
<row>
<entry>0</entry>
<entry>8</entry>
<entry>6</entry>
<entry>0010000</entry>
<entry>0110000</entry>
<entry>11110000</entry>
</row>
<row>
<entry>1</entry>
<entry>9</entry>
<entry>7</entry>
<entry>1010001</entry>
<entry>0110001</entry>
<entry>11110001</entry>
</row>
<row>
<entry>2</entry>
<entry>10</entry>
<entry>8</entry>
<entry>1010010</entry>
<entry>0110010</entry>
<entry>11110010</entry>
</row>
<row>
<entry>3</entry>
<entry>11</entry>
<entry>9</entry>
<entry>0010011</entry>
<entry>0110011</entry>
<entry>11110011</entry>
</row>
<row>
<entry>4</entry>
<entry>12</entry>
<entry>10</entry>
<entry>1010100</entry>
<entry>0110100</entry>
<entry>11110100</entry>
</row>
<row>
<entry>5</entry>
<entry>13</entry>
<entry>11</entry>
<entry>0010101</entry>
<entry>0110101</entry>
<entry>11110101</entry>
</row>
<row>
<entry>6</entry>
<entry>14</entry>
<entry>12</entry>
<entry>0010110</entry>
<entry>0110110</entry>
<entry>11110110</entry>
</row>
<row>
<entry>7</entry>
<entry>15</entry>
<entry>13</entry>
<entry>1010111</entry>
<entry>0110111</entry>
<entry>11110111</entry>
</row>
<row>
<entry>8</entry>
<entry>16</entry>
<entry>14</entry>
<entry>1011000</entry>
<entry>0111000</entry>
<entry>11111000</entry>
</row>
<row>
<entry>9</entry>
<entry>17</entry>
<entry>15</entry>
<entry>0011001</entry>
<entry>0111001</entry>
<entry>11111001</entry>
</row>
<row>
<entry>A</entry>
<entry>18</entry>
<entry>16</entry>
<entry>1100001</entry>
<entry>1000001</entry>
<entry>11000001</entry>
</row>
<row>
<entry>B</entry>
<entry>19</entry>
<entry>17</entry>
<entry>1100010</entry>
<entry>1000010</entry>
<entry>11000010</entry>
</row>
<row>
<entry>C</entry>
<entry>20</entry>
<entry>18</entry>
<entry>0100011</entry>
<entry>1000011</entry>
<entry>11000011</entry>
</row>
<row>
<entry>D</entry>
<entry>21</entry>
<entry>19</entry>
<entry>1100100</entry>
<entry>1000100</entry>
<entry>11000100</entry>
</row>
<row>
<entry>E</entry>
<entry>22</entry>
<entry>20</entry>
<entry>0100101</entry>
<entry>1000101</entry>
<entry>11000101</entry>
</row>
<row>
<entry>F</entry>
<entry>23</entry>
<entry>21</entry>
<entry>0100110</entry>
<entry>1000110</entry>
<entry>11000110</entry>
</row>
<row>
<entry>G</entry>
<entry>24</entry>
<entry>22</entry>
<entry>1100111</entry>
<entry>1000111</entry>
<entry>11000111</entry>
</row>
<row>
<entry>H</entry>
<entry>25</entry>
<entry>23</entry>
<entry>1101000</entry>
<entry>1001000</entry>
<entry>11001000</entry>
</row>
<row>
<entry>I</entry>
<entry>26</entry>
<entry>24</entry>
<entry>0101001</entry>
<entry>1001001</entry>
<entry>11001001</entry>
</row>
<row>
<entry>J</entry>
<entry>27</entry>
<entry>25</entry>
<entry>0101010</entry>
<entry>1001010</entry>
<entry>11010001</entry>
</row>
<row>
<entry>K</entry>
<entry>28</entry>
<entry>26</entry>
<entry>1101011</entry>
<entry>1001011</entry>
<entry>11010010</entry>
</row>
<row>
<entry>L</entry>
<entry>29</entry>
<entry>27</entry>
<entry>0101100</entry>
<entry>1001100</entry>
<entry>11010011</entry>
</row>
<row>
<entry>M</entry>
<entry>30</entry>
<entry>28</entry>
<entry>1101101</entry>
<entry>1001101</entry>
<entry>11010100</entry>
</row>
<row>
<entry>N</entry>
<entry>31</entry>
<entry>29</entry>
<entry>1101110</entry>
<entry>1001110</entry>
<entry>11010101</entry>
</row>
<row>
<entry>O</entry>
<entry>32</entry>
<entry>30</entry>
<entry>0101111</entry>
<entry>1001111</entry>
<entry>11010110</entry>
</row>
<row>
<entry>P</entry>
<entry>33</entry>
<entry>31</entry>
<entry>1110000</entry>
<entry>1010000</entry>
<entry>11010111</entry>
</row>
<row>
<entry>Q</entry>
<entry>34</entry>
<entry>32</entry>
<entry>0110001</entry>
<entry>1010001</entry>
<entry>11011000</entry>
</row>
<row>
<entry>R</entry>
<entry>35</entry>
<entry>33</entry>
<entry>0110010</entry>
<entry>1010010</entry>
<entry>11011001</entry>
</row>
<row>
<entry>S</entry>
<entry>36</entry>
<entry>34</entry>
<entry>1110011</entry>
<entry>1010011</entry>
<entry>11100010</entry>
</row>
<row>
<entry>T</entry>
<entry>37</entry>
<entry>35</entry>
<entry>0110100</entry>
<entry>1010100</entry>
<entry>11100011</entry>
</row>
<row>
<entry>U</entry>
<entry>38</entry>
<entry>36</entry>
<entry>1110101</entry>
<entry>1010101</entry>
<entry>11100100</entry>
</row>
<row>
<entry>V</entry>
<entry>39</entry>
<entry>37</entry>
<entry>1110110</entry>
<entry>1010110</entry>
<entry>11100101</entry>
</row>
<row>
<entry>W</entry>
<entry>40</entry>
<entry>38</entry>
<entry>0110111</entry>
<entry>1010111</entry>
<entry>11100110</entry>
</row>
<row>
<entry>X</entry>
<entry>41</entry>
<entry>39</entry>
<entry>0111000</entry>
<entry>1011000</entry>
<entry>11100111</entry>
</row>
<row>
<entry>Y</entry>
<entry>42</entry>
<entry>40</entry>
<entry>1111001</entry>
<entry>1011001</entry>
<entry>11101000</entry>
</row>
<row>
<entry>Z</entry>
<entry>43</entry>
<entry>41</entry>
<entry>1111010</entry>
<entry>1011010</entry>
<entry>11101001</entry>
</row>
<row>
<entry>[</entry>
<entry>44</entry>
<entry>42</entry>
<entry>0111011</entry>
<entry>1011011</entry>
<entry>10111010</entry>
</row>
<row>
<entry>\</entry>
<entry>45</entry>
<entry>43</entry>
<entry>1111100</entry>
<entry>1011100</entry>
<entry>11100000</entry>
</row>
<row>
<entry>]</entry>
<entry>46</entry>
<entry>44</entry>
<entry>0111110</entry>
<entry>1011101</entry>
<entry>10111011</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section>
<title>Base-16 alphabet</title>
<p>Cards are encoded with the special ISO 7811 modified 5-bit ASCII encoding for track 2. This data
type allows parity checking of the digits. Many systems require this encoding to be converted into
standard data types for processing. Other data fields may use base-16 encoding and would use this
same alphabet when performing VFPE. These data types support values in the ranges 0 - 9 and A -
F.</p>
<p>VFPE requires translation of the characters of the VFPE alphabet number prior to encryption.
Therefore, any of the data types shown in Table 190 are supported. Decryption may use the same or a
different data type than the original encoding. This alphabet requires the following values to be
used in the VFPE
algorithm:<codeblock>Number of characters in alphabet(&rsquo;n&rsquo;): 16</codeblock></p>
<table frame="all" id="base_16_alphabet">
<title>Base-16 alphabet</title>
<desc>
<p outputclass="summary">Table describing the Base-16 alphabet in seven columns</p>
</desc>
<tgroup cols="7">
<colspec align="center" colname="col1" colwidth="*"/>
<colspec align="center" colname="col2" colwidth="*"/>
<colspec align="center" colname="col3" colwidth="*"/>
<colspec align="center" colname="col4" colwidth="*"/>
<colspec align="center" colname="col5" colwidth="*"/>
<colspec align="center" colname="col6" colwidth="*"/>
<colspec align="center" colname="col7" colwidth="*"/>
<thead>
<row>
<entry morerows="1">VFPE alphabet number</entry>
<entry nameend="col3" namest="col2">ISO 7811 modified 5-bit ASCII encoding</entry>
<entry nameend="col7" namest="col4">Normal data type encoding</entry>
</row>
<row>
<entry>Character</entry>
<entry>Binary</entry>
<entry>Character</entry>
<entry>4-bit binary coded decimal</entry>
<entry>7-bit ASCII</entry>
<entry>8-bit EBCDIC</entry>
</row>
</thead>
<tbody>
<row>
<entry>0</entry>
<entry>0</entry>
<entry rev="shd3">10000</entry>
<entry>0</entry>
<entry>0000</entry>
<entry>0110000</entry>
<entry>11110000</entry>
</row>
<row>
<entry>1</entry>
<entry>1</entry>
<entry>00001</entry>
<entry>1</entry>
<entry>0001</entry>
<entry>0110001</entry>
<entry>11110001</entry>
</row>
<row>
<entry>2</entry>
<entry>2</entry>
<entry>00010</entry>
<entry>2</entry>
<entry>0010</entry>
<entry>0110010</entry>
<entry>11110010</entry>
</row>
<row>
<entry>3</entry>
<entry>3</entry>
<entry>10011</entry>
<entry>3</entry>
<entry>0011</entry>
<entry>0110011</entry>
<entry>11110011</entry>
</row>
<row>
<entry>4</entry>
<entry>4</entry>
<entry>00100</entry>
<entry>4</entry>
<entry>0100</entry>
<entry>0110100</entry>
<entry>11110100</entry>
</row>
<row>
<entry>5</entry>
<entry>5</entry>
<entry>10101</entry>
<entry>5</entry>
<entry>0101</entry>
<entry>0110101</entry>
<entry>11110101</entry>
</row>
<row>
<entry>6</entry>
<entry>6</entry>
<entry>10110</entry>
<entry>6</entry>
<entry>0110</entry>
<entry>0110110</entry>
<entry>11110110</entry>
</row>
<row>
<entry>7</entry>
<entry>7</entry>
<entry>00111</entry>
<entry>7</entry>
<entry>0111</entry>
<entry>0110111</entry>
<entry>11110111</entry>
</row>
<row>
<entry>8</entry>
<entry>8</entry>
<entry>01000</entry>
<entry>8</entry>
<entry>1000</entry>
<entry>0111000</entry>
<entry>11111000</entry>
</row>
<row>
<entry>9</entry>
<entry>9</entry>
<entry>11001</entry>
<entry>9</entry>
<entry>1001</entry>
<entry>0111001</entry>
<entry>11111001</entry>
</row>
<row>
<entry>10</entry>
<entry>:</entry>
<entry>11010</entry>
<entry>A</entry>
<entry>1010</entry>
<entry>1000001</entry>
<entry>11000001</entry>
</row>
<row>
<entry>11</entry>
<entry>;</entry>
<entry>01011</entry>
<entry>B</entry>
<entry>1011</entry>
<entry>1000010</entry>
<entry>11000010</entry>
</row>
<row>
<entry>12</entry>
<entry>&lt;</entry>
<entry>11100</entry>
<entry>C</entry>
<entry>1100</entry>
<entry>1000011</entry>
<entry>11000011</entry>
</row>
<row>
<entry>13</entry>
<entry>=</entry>
<entry>01101</entry>
<entry>D</entry>
<entry>1101</entry>
<entry>1000100</entry>
<entry>11000100</entry>
</row>
<row>
<entry>14</entry>
<entry>&gt;</entry>
<entry>01110</entry>
<entry>E</entry>
<entry>1110</entry>
<entry>1000101</entry>
<entry>11000101</entry>
</row>
<row>
<entry>15</entry>
<entry>?</entry>
<entry>11111</entry>
<entry>F</entry>
<entry>1111</entry>
<entry>1000110</entry>
<entry>11000110</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="usage_csnbfpee_csnbfped">
<title>Usage notes for <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmfpee"/>
(<keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfpee"/>) and <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbnmfped"/> (<keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfped"/>) services</title>
<p>The <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfpee"/> and <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/vbclfped"/> services support two options: </p>
<ol>
<li rev="shd3">the standard encryption or decryption option which uses the DES CBC mode of operation </li>
<li>the Visa Format Preserving Encryption (VFPE) option. </li>
</ol>
<p>If the standard encryption or decryption option was selected, the plaintext data was formatted
into blocks and then encrypted or decrypted with triple-DES with a static TDES key or a DUKPT double
length data encryption or decryption key. For the decryption operation, the data blocks must be
decrypted and unblocked to produce the plaintext. If the data was encrypted or decrypted with the
VFPE option, it was processed in place without changing the data type or length of the field. Also,
DUKPT key management is used. </p>
<p>These services can be used to encrypt or decrypt one or all of the following fields: </p>
<ul compact="yes">
<li>the primary account number (PAN),</li>
<li>the cardholder name,</li>
<li>the track 1 discretionary data, or</li>
<li>the track 2 discretionary data.</li>
</ul>
<p>There are three encryption or decryption options: </p>
<ol>
<li>the standard option with CBC mode TDES and DUKPT keys</li>
<li>the VFPE option with DUKPT keys</li>
<li>the standard option with CBC mode TDES and double-length TDES keys.</li>
</ol>
<p>To use these services, you must specify the following:</p>
<ul>
<li>the processing method, which is limited to Visa Data Secure Platform (VDSP)</li>
<li>the key management method, either STATIC or DUKPT</li>
<li>the algorithm, which is limited to TDES</li>
<li>the mode, either CBC or Visa Format Preserving Encryption (VFPE)</li>
<li>the plaintext to be encrypted or decrypted</li>
<li>the character set of each field to be encrypted or decrypted using rule-array keywords</li>
<li>the base derivation key and key serial number if DUKPT key management is used, or a
double-length TDES key if STATIC key management is used</li>
<li>a compliance or non-compliance indicator for the check digit of the PAN to be processed if VFPE
is specified.</li>
</ul>
<p>The services return the encrypted or decrypted fields and optionally, the DUKPT PIN key, if the
DUKPT key management is selected and the PINKEY rule is specified.</p>
</section>
<section>
<title>NIST FFX (FF1, FF2, and FF2.1) algorithm description</title>
<p rev="sh21i1">The <keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/ffxd"/>, <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/ffxe"/>, and <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/ffxt"/> callable services implement the NIST FFX
algorithms. The FF1, FF2, and FF2.1 algorithms are all built in a similar way, using AES as the base
cipher for the operations. The overall algorithm uses a pseudorandom function (PRF) as its main
encryption function using a variable length Feistal network. Each of the three algorithms contain a
different PRF to achieve the result. Each algorithm also takes in a tweak string to further vary the
action of the PRF. FF1 uses either a 128-bit AES key or a 256-bit AES key. FF2 and FF2.1 only
support AES 128-bit keys.</p>
<p rev="sh21i1">In the algorithm descriptions, the alphabet <b>A</b> is represented by characters in
the sequence <b>{ 0, 1, 2,.. , n-1}</b> where <b>n</b> is the number of characters in the alphabet
<b>A</b>. Typically the string to be encrypted or decrypted is represented in a different alphabet
(such as ASCII) in which case the string needs to be translated from/to original alphabet
before/after the FPE algorithm is applied. In the parameters of the applicable verbs, the value
<b>n</b> is known as the <parmname>alphabet_length</parmname>. For the <keyword
conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/ffxt"/> verb, there are both input and output
forms.</p>
<p rev="sh21i1">Additionally, there is a tweak alphabet <b>T</b> represented by {0, 1, 2, ...,
t_radix-1} where t_radix is the number of characters in the tweak alphabet. In the parameters of the
applicable verbs, <b>t_radix</b> is known as <parmname>tweak_alphabet_length</parmname>. For the
<keyword conref="wskc_conref-l0wskc04.dita#conref-l0wskc04/ffxt"/> verb, there are both input and
output forms.</p>
</section>
</conbody>
</concept>
<?Pub *0000018696?>
